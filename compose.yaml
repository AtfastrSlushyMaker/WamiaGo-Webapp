
services:
<<<<<<< HEAD
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
=======
  apache:
    image: httpd:2.4
    container_name: wamia_apache
    ports:
      - "8080:80"
    volumes:
      - .:/usr/local/apache2/htdocs/
    depends_on:
      - mysql
    networks:
      - app_network

  mysql:
    image: mysql:8.0
    container_name: wamia_mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_ROOT_PASSWORD: ''
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app_network
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: wamia_phpmyadmin
    restart: always
    environment:
      PMA_HOST: wamia_mysql
      PMA_USER: root
      PMA_PASSWORD: ''
      PMA_ARBITRARY: 1
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - app_network
      
  facial-recognition:
    build:
      context: ./facial-recognition
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "5001:5001"
    volumes:
      - facial_recognition_data:/app/data
    environment:
      - MODEL_PATH=/app/models
      - THRESHOLD=0.6
      - DEBUG=false
      - LOG_LEVEL=INFO
      - PORT=5001
    networks:
      - app_network
      - facial_recognition_network

volumes:
  mysql_data:
  facial_recognition_data:

networks:
  app_network:
    driver: bridge
  facial_recognition_network:
    driver: bridge
>>>>>>> main
