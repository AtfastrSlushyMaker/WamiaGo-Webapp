# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    profile_pictures_directory: '%kernel.project_dir%/public/uploads/profile_pictures'
    app_secret: '%env(APP_SECRET)%'
    app_email: '%env(APP_EMAIL)%'
    cloudinary_cloud_name: '%env(CLOUDINARY_CLOUD_NAME)%'
    cloudinary_api_key: '%env(CLOUDINARY_API_KEY)%'
    cloudinary_api_secret: '%env(CLOUDINARY_API_SECRET)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
      # Configure ResetPasswordService
    App\Service\ResetPasswordService:
        arguments:
            $params: '@parameter_bag'

    # Configure CloudinaryService
    App\Service\CloudinaryService:
        arguments:
            $cloudName: '%cloudinary_cloud_name%'
            $apiKey: '%cloudinary_api_key%'
            $apiSecret: '%cloudinary_api_secret%'

    # Make the UserRepository service available in templates
    App\Service\UserRepository:
        autowire: true
        public: true