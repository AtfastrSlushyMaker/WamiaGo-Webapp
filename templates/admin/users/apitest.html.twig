{% extends 'base.html.twig' %}

{% block title %}API Test{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1>API Test</h1>
        
        <div class="alert alert-info">
            This page tests the API endpoints for the user management system.
        </div>
        
        <div class="card mb-4">
            <div class="card-header">
                API Test Results
            </div>
            <div class="card-body">
                <div id="testResults">
                    <p>Running tests...</p>
                </div>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                Authentication Info
            </div>
            <div class="card-body">
                <p><strong>Current User:</strong> {{ app.user ? app.user.email : 'Not logged in' }}</p>
                <p><strong>Roles:</strong> {{ app.user ? app.user.roles|join(', ') : 'None' }}</p>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const testResults = document.getElementById('testResults');
            
            function addResult(title, content, isSuccess = true) {
                const resultDiv = document.createElement('div');
                resultDiv.className = `alert ${isSuccess ? 'alert-success' : 'alert-danger'} mb-3`;
                
                const titleEl = document.createElement('h5');
                titleEl.textContent = title;
                resultDiv.appendChild(titleEl);
                
                const contentEl = document.createElement('pre');
                contentEl.textContent = content;
                contentEl.style.maxHeight = '200px';
                contentEl.style.overflow = 'auto';
                contentEl.style.backgroundColor = '#f8f9fa';
                contentEl.style.padding = '10px';
                contentEl.style.borderRadius = '4px';
                resultDiv.appendChild(contentEl);
                
                testResults.appendChild(resultDiv);
            }
            
            // Clear initial message
            testResults.innerHTML = '';
            
            // Test the API endpoints
            testEndpoint('/admin/users/api/test', 'Basic API Test');
            
            function testEndpoint(url, title) {
                fetch(url, {
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    credentials: 'same-origin'
                })
                .then(response => {
                    const contentType = response.headers.get('content-type');
                    const status = `${response.status} ${response.statusText}`;
                    const headers = Array.from(response.headers.entries())
                        .map(([key, value]) => `${key}: ${value}`)
                        .join('\n');
                    
                    return response.text().then(text => {
                        let formattedResponse;
                        let isSuccess = response.ok;
                        
                        try {
                            // Try to parse as JSON and format it
                            const json = JSON.parse(text);
                            formattedResponse = JSON.stringify(json, null, 2);
                            isSuccess = isSuccess && json.success;
                        } catch (e) {
                            // If not JSON, just use the text
                            formattedResponse = text.length > 1000 ? 
                                text.substring(0, 1000) + '... (truncated)' : text;
                        }
                        
                        const fullResult = `Status: ${status}\n\nHeaders:\n${headers}\n\nResponse:\n${formattedResponse}`;
                        addResult(title, fullResult, isSuccess);
                    });
                })
                .catch(error => {
                    addResult(title, `Error: ${error.message}`, false);
                });
            }
        });
    </script>
{% endblock %} 