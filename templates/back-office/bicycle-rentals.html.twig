{% extends 'back-office/base.html.twig' %}

{% block title %}Bicycle Management Dashboard{% endblock %}

{% block content %}
{% set active_tab = app.request.get('tab', 'rentals') %}

<div class="container-fluid">
    <!-- Dashboard Header with Stats Overview -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="h3 mb-2">Bicycle Management Dashboard</h1>
                    <p class="text-muted">Manage your bicycle rentals, stations and fleet</p>
                </div>
                <div class="d-flex">
                    <div class="dropdown me-2">
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="exportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fas fa-download me-2"></i>Export
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="exportDropdown">
                            {% if active_tab == 'rentals' %}
                                <li><a class="dropdown-item" href="{{ path('admin_bicycle_rental_export') }}{% if app.request.query.all|length > 0 %}?{{ app.request.query.all|url_encode }}{% endif %}"><i class="fas fa-file-csv me-2"></i>Export to CSV</a></li>
                                <li><a class="dropdown-item" href="#" id="export-excel"><i class="fas fa-file-excel me-2"></i>Export to Excel</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-file-pdf me-2"></i>Export to PDF</a></li>
                            {% else %}
                                <li><a class="dropdown-item" href="#"><i class="fas fa-file-csv me-2"></i>Export to CSV</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-file-excel me-2"></i>Export to Excel</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-file-pdf me-2"></i>Export to PDF</a></li>
                            {% endif %}
                        </ul>
                    </div>
                    <a href="{{ path('admin_bicycle_dashboard') }}" class="btn btn-primary">
                        <i class="fas fa-home me-2"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Management Navigation Tabs - Enhanced Design -->
    <div class="card mb-4">
        <div class="card-body p-0">
            <ul class="nav nav-tabs-custom" id="bicycleManagementTabs" role="tablist">
                <li class="nav-item flex-fill text-center">
                    <a class="nav-link d-flex flex-column align-items-center py-3 {{ active_tab == 'rentals' ? 'active' : '' }}"
                       href="{{ path('admin_bicycle_dashboard', app.request.query.all|merge({'tab': 'rentals', 'page': 1})) }}">
                        <i class="fas fa-receipt mb-1 tab-icon"></i>
                        <span>Rentals</span>
                    </a>
                </li>
                <li class="nav-item flex-fill text-center">
                    <a class="nav-link d-flex flex-column align-items-center py-3 {{ active_tab == 'bicycles' ? 'active' : '' }}"
                       href="{{ path('admin_bicycle_dashboard', app.request.query.all|merge({'tab': 'bicycles', 'page': 1})) }}">
                        <i class="fas fa-bicycle mb-1 tab-icon"></i>
                        <span>Bicycles</span>
                    </a>
                </li>
                <li class="nav-item flex-fill text-center">
                    <a class="nav-link d-flex flex-column align-items-center py-3 {{ active_tab == 'stations' ? 'active' : '' }}"
                       href="{{ path('admin_bicycle_dashboard', app.request.query.all|merge({'tab': 'stations', 'page': 1})) }}">
                        <i class="fas fa-map-marker-alt mb-1 tab-icon"></i>
                        <span>Stations</span>
                    </a>
                </li>
            </ul>
        </div>
    </div>

    <!-- Tab Content with Animation -->
    <div class="tab-content fade-in" id="bicycleManagementTabsContent">
        {% if active_tab == 'rentals' %}
            <div class="tab-pane fade show active">
                {% include 'back-office/bicycle/rental.html.twig' with {
                    'rentals': rentals|default([]),
                    'stations': stations|default([]),
                    'stats': stats|default({})
                } %}
            </div>
        {% elseif active_tab == 'bicycles' %}
            <div class="tab-pane fade show active">
                {% include 'back-office/bicycle/bicycle.html.twig' %}
            </div>
        {% elseif active_tab == 'stations' %}
            <div class="tab-pane fade show active">
                {% include 'back-office/bicycle/station.html.twig' %}
            </div>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    /* Enhanced Tab Styling */
    .nav-tabs-custom {
        border-bottom: none;
        display: flex;
        width: 100%;
    }
    
    .nav-tabs-custom .nav-item {
        margin-bottom: 0;
        border-right: 1px solid rgba(0, 0, 0, 0.05);
    }
    
    .nav-tabs-custom .nav-item:last-child {
        border-right: none;
    }
    
    .nav-tabs-custom .nav-link {
        border: none;
        border-radius: 0;
        color: #6c757d;
        font-weight: 500;
        padding: 1rem 1.5rem;
        transition: all 0.25s ease;
        position: relative;
    }
    
    .nav-tabs-custom .nav-link .tab-icon {
        font-size: 1.5rem;
        transition: all 0.3s ease;
    }
    
    .nav-tabs-custom .nav-link:hover {
        color: #495057;
        background-color: rgba(13, 110, 253, 0.05);
    }
    
    .nav-tabs-custom .nav-link:hover .tab-icon {
        transform: translateY(-3px);
    }
    
    .nav-tabs-custom .nav-link.active {
        color: #0d6efd;
        background-color: rgba(13, 110, 253, 0.1);
    }
    
    .nav-tabs-custom .nav-link.active::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 3px;
        background-color: #0d6efd;
    }
    
    .nav-tabs-custom .nav-link.active .tab-icon {
        transform: translateY(-3px);
        color: #0d6efd;
    }
    
    /* Bicycle-specific styling for active tab */
    .nav-tabs-custom .nav-link.active[href*="tab=bicycles"] {
        color: #66bb6a;
        background-color: rgba(102, 187, 106, 0.1);
    }
    
    .nav-tabs-custom .nav-link.active[href*="tab=bicycles"]::after {
        background-color: #66bb6a;
    }
    
    .nav-tabs-custom .nav-link.active[href*="tab=bicycles"] .tab-icon {
        color: #66bb6a;
    }
    
    /* Stations-specific styling for active tab */
    .nav-tabs-custom .nav-link.active[href*="tab=stations"] {
        color: #ff9800;
        background-color: rgba(255, 152, 0, 0.1);
    }
    
    .nav-tabs-custom .nav-link.active[href*="tab=stations"]::after {
        background-color: #ff9800;
    }
    
    .nav-tabs-custom .nav-link.active[href*="tab=stations"] .tab-icon {
        color: #ff9800;
    }
    
    /* Animation for tab transitions */
    .fade-in {
        animation: fadeIn 0.5s ease-in;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    /* Card enhancements */
    .card {
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        transition: all 0.2s;
    }
    
    .card:hover {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }
    
    /* Border-left cards styling */
    .border-left-primary {
        border-left: 4px solid #0d6efd;
    }
    
    .border-left-success {
        border-left: 4px solid #66bb6a;
    }
    
    .border-left-warning {
        border-left: 4px solid #ff9800;
    }
    
    .border-left-info {
        border-left: 4px solid #0dcaf0;
    }
    
    /* Battery level styling */
    .battery-indicator {
        width: 100%;
        height: 10px;
        background-color: #e9ecef;
        border-radius: 5px;
        overflow: hidden;
    }
    
    .battery-level {
        height: 100%;
        transition: width 0.3s ease;
    }
    
    /* Status badges */
    .status-badge {
        padding: 0.35em 0.65em;
        font-size: 0.75em;
        font-weight: 700;
        border-radius: 50rem;
        display: inline-flex;
        align-items: center;
    }
    
    .status-badge i {
        margin-right: 0.25rem;
    }
    
    .status-available {
        background-color: rgba(102, 187, 106, 0.1);
        color: #2e7d32;
    }
    
    .status-in-use {
        background-color: rgba(33, 150, 243, 0.1);
        color: #0d47a1;
    }
    
    .status-maintenance {
        background-color: rgba(255, 152, 0, 0.1);
        color: #e65100;
    }
    
    .status-inactive {
        background-color: rgba(158, 158, 158, 0.1);
        color: #424242;
    }

    /* Station Assignment Quick Actions */
    .station-quick-assign {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 1000;
    }

    .station-quick-assign .btn {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 10px rgba(0,0,0,0.3);
    }

    .station-quick-assign .btn i {
        font-size: 24px;
    }

    .station-action-menu {
        position: absolute;
        bottom: 70px;
        right: 10px;
        width: 250px;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        display: none;
    }

    .station-action-menu.show {
        display: block;
        animation: slideUp 0.3s ease;
    }

    @keyframes slideUp {
        from { transform: translateY(20px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }

    /* Station map styling */
    .station-map {
        height: 250px;
        border-radius: 4px;
        margin-bottom: 15px;
    }

    /* Drag and drop station assignment */
    .bicycle-draggable {
        cursor: grab;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .bicycle-draggable:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .bicycle-draggable.dragging {
        opacity: 0.7;
        transform: scale(0.95);
        box-shadow: 0 10px 25px rgba(0,0,0,0.2);
    }

    .station-dropzone {
        border: 2px dashed #ddd;
        border-radius: 8px;
        min-height: 100px;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 20px;
        background-color: rgba(0,0,0,0.02);
    }

    .station-dropzone.dragover {
        border-color: #66bb6a;
        background-color: rgba(102, 187, 106, 0.1);
    }
</style>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize DataTables with enhanced styling
        const tables = document.querySelectorAll('.datatable');
        tables.forEach(table => {
            new DataTable(table, {
                responsive: true,
                lengthChange: true,
                pageLength: 10,
                dom: '<"top d-flex justify-content-between align-items-center mb-3"<"d-flex align-items-center"l><"d-flex"f>>rt<"bottom d-flex justify-content-between align-items-center"<"d-flex"i><"d-flex"p>>',
                language: {
                    search: "",
                    searchPlaceholder: "Search records..."
                },
                initComplete: function() {
                    // Enhance search input
                    const searchInput = document.querySelector('.dataTables_filter input');
                    if (searchInput) {
                        searchInput.classList.add('form-control');
                        searchInput.style.marginLeft = '10px';
                    }
                    
                    // Enhance length select
                    const lengthSelect = document.querySelector('.dataTables_length select');
                    if (lengthSelect) {
                        lengthSelect.classList.add('form-select');
                        lengthSelect.style.width = 'auto';
                        lengthSelect.style.marginLeft = '5px';
                        lengthSelect.style.marginRight = '5px';
                    }
                }
            });
        });
        
        // Initialize tooltips
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
        
        // Update Export Excel link if it exists
        const exportExcelBtn = document.getElementById('export-excel');
        if (exportExcelBtn) {
            exportExcelBtn.addEventListener('click', function(e) {
                e.preventDefault();
                window.location.href = '{{ path('admin_bicycle_rental_export') }}' + window.location.search + '&format=excel';
            });
        });
        
        // Handle Modal Confirmations for rentals
        const confirmModal = document.getElementById('confirmActionModal');
        if (confirmModal) {
            const modalInstance = new bootstrap.Modal(confirmModal);
            let activeForm = null;
            
            // Setup action buttons
            document.querySelectorAll('.activate-rental-btn, .cancel-rental-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const rentalId = this.getAttribute('data-rental-id');
                    const isCancel = this.classList.contains('cancel-rental-btn');
                    const formId = isCancel ? 'cancelRentalForm' : 'activateRentalForm';
                    
                    const form = document.getElementById(formId);
                    if (form) {
                        const path = isCancel 
                            ? '{{ path('admin_bicycle_rental_cancel', {'id': '0'}) }}'.replace('/0', `/${rentalId}`)
                            : '{{ path('admin_bicycle_rental_activate', {'id': '0'}) }}'.replace('/0', `/${rentalId}`);
                            
                        form.setAttribute('action', path);
                        
                        // Setup modal content
                        document.getElementById('confirmActionTitle').textContent = isCancel ? 'Cancel Rental' : 'Activate Rental';
                        document.getElementById('confirmActionBody').textContent = isCancel
                            ? 'Are you sure you want to cancel this rental? This action cannot be undone.'
                            : 'Are you sure you want to activate this rental? This will mark the bicycle as in use and start the rental timer.';
                        document.getElementById('confirmActionBtn').className = isCancel ? 'btn btn-danger' : 'btn btn-success';
                        document.getElementById('confirmActionBtn').textContent = isCancel ? 'Cancel Rental' : 'Activate';
                        
                        activeForm = form;
                        modalInstance.show();
                    }
                });
            });
            
            // Handle confirm action button
            document.getElementById('confirmActionBtn')?.addEventListener('click', function() {
                if (activeForm) {
                    activeForm.submit();
                }
                modalInstance.hide();
            });
        }
    });
</script>
{% endblock %}