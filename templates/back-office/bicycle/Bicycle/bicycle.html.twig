{% block stylesheets %}

<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="{{ asset('css/back/bicycle/bicycle.css') }}" rel="stylesheet">
<style>
    /* Green Theme for Bicycle Fleet Management */
    
    /* Hero Section Styling */
    .hero-section {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        padding: 2rem;
        border-radius: 0.75rem;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }
    
    .hero-section:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.75rem 2rem rgba(40, 167, 69, 0.2);
    }
    
    .hero-section::before {
        content: "";
        position: absolute;
        top: -50%;
        right: -10%;
        width: 300px;
        height: 300px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        z-index: 1;
    }
    
    /* Quick Overview Cards */
    .hover-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .hover-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1.5rem rgba(40, 167, 69, 0.15) !important;
    }
    
    .shadow-hover:hover {
        box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15) !important;
    }
    
    /* Battery Status Animations */
    .pulse-animation {
        animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.6; }
        100% { opacity: 1; }
    }
    
    .pulse-danger {
        animation: pulse-danger 2s infinite;
    }
    
    @keyframes pulse-danger {
        0% { color: #dc3545; }
        50% { color: #f06a75; }
        100% { color: #dc3545; }
    }
    
    /* Battery Status Circles */
    .battery-status-circle {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        font-size: 2rem;
    }
    
    .battery-percentage {
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        font-size: 0.75rem;
        font-weight: bold;
        background: white;
        padding: 2px 8px;
        border-radius: 10px;
    }
    
    /* Battery health bar */
    .battery-health-bar {
        height: 8px;
        border-radius: 4px;
        background-color: #e9ecef;
        margin-top: 15px;
        overflow: hidden;
        display: flex;
    }
    
    .battery-segment {
        height: 100%;
        transition: width 0.5s ease;
    }
    
    /* Actions & Filters Card */
    .card-header {
        padding: 1rem 1.25rem;
        background-color: #f8f9fa;
        border-bottom: none;
    }
    
    /* Quick Action Buttons */
    .quick-action-buttons {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }
    
    .quick-action-btn {
        background-color: #fff;
        border: 1px solid #e9ecef;
        border-radius: 10px;
        padding: 15px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        cursor: pointer;
    }
    
    .quick-action-btn:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.08);
    }
    
    .quick-action-btn .icon-wrapper {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 1.25rem;
    }
    
    .btn-add .icon-wrapper {
        background-color: rgba(40, 167, 69, 0.1);
        color: #28a745;
    }
    
    .btn-assign .icon-wrapper {
        background-color: rgba(13, 110, 253, 0.1);
        color: #0d6efd;
    }
    
    .btn-maintenance .icon-wrapper {
        background-color: rgba(255, 193, 7, 0.1);
        color: #ffc107;
    }
    
    .btn-battery .icon-wrapper {
        background-color: rgba(220, 53, 69, 0.1);
        color: #dc3545;
    }
    
    /* Table Styling */
    .bicycle-table {
        margin-bottom: 0;
    }
    
    .bicycle-mini-icon {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .bicycle-row {
        transition: all 0.15s ease-in-out;
    }
    
    .bicycle-row:hover {
        background-color: rgba(40, 167, 69, 0.05) !important;
    }
    
    .bicycle-table .action-buttons {
        white-space: nowrap;
    }
    
    /* Small Battery Indicator */
    .battery-indicator {
        width: 60px;
        height: 8px;
        border-radius: 4px;
        background-color: rgba(0, 0, 0, 0.05);
        overflow: hidden;
    }
    
    .battery-level-small {
        height: 100%;
        transition: width 0.5s ease;
    }
    
    /* Fade-in Animation for Rows */
    .fade-in-row {
        opacity: 0;
        animation: fadeIn 0.3s ease forwards;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    /* Battery indicators */
    .battery-indicator.high i {
        color: #28a745;
    }
    
    .battery-indicator.medium i {
        color: #17a2b8;
    }
    
    .battery-indicator.low i {
        color: #ffc107;
    }
    
    .battery-indicator.critical i {
        color: #dc3545;
        animation: pulse-danger 2s infinite;
    }
    
    /* Pagination styling */
    .pagination-wrapper {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        background-color: #f8f9fa;
        border-radius: 0 0 0.5rem 0.5rem;
    }
    
    .pagination-modern {
        display: flex;
    }
    
    .pagination-modern .page-item .page-link {
        border-radius: 0.5rem;
        border: none;
        margin: 0 0.15rem;
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
        color: #495057;
        transition: all 0.2s ease;
    }
    
    .pagination-modern .page-item.active .page-link {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        box-shadow: 0 0.25rem 0.75rem rgba(40, 167, 69, 0.25);
    }
    
    .pagination-modern .page-item .page-link:hover:not(.active) {
        background-color: #e9ecef;
        transform: translateY(-2px);
    }
    
    /* Modal improvements */
    .modal-header.bg-gradient-primary-to-secondary {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%) !important;
        color: white;
    }
    
    /* Bicycle delete dialog */
    .bicycle-icon-container {
        width: 80px;
        height: 80px;
        background-color: rgba(40, 167, 69, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #28a745;
    }
    
    .bicycle-delete-info {
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 15px;
    }
    
    /* Form styling */
    .form-group label {
        font-weight: 500;
        margin-bottom: 0.5rem;
    }
</style>
{% endblock %}

<!-- New Hero Section with Add Button -->
<div class="hero-section mb-4 p-4 text-white rounded-3 shadow-sm">
    <div class="row align-items-center">
        <div class="col-lg-7">
            <div class="d-flex align-items-center">
                <div class="tab-icon-container bg-white bg-opacity-25 rounded-circle p-3 me-3">
                    <i class="fas fa-bicycle fa-3x text-white"></i>
                </div>
                <div>
                    <h2 class="fw-bold mb-1">Bicycle Fleet Management</h2>
                    <p class="lead mb-0 opacity-75">Manage your entire fleet of e-bicycles with real-time tracking and analytics</p>
                </div>
            </div>
        </div>
        <div class="col-lg-5 text-lg-end mt-3 mt-lg-0">
            <div class="btn-group me-2">
                <button class="btn btn-light btn-lg shadow-sm dropdown-toggle" type="button" id="bicycleExportDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-download me-2"></i> Export
                </button>
                <ul class="dropdown-menu" aria-labelledby="bicycleExportDropdown">
                    <li><a class="dropdown-item" href="{{ path('admin_bicycle_export', app.request.query.all|merge({'format': 'csv'})) }}"><i class="fas fa-file-csv me-2 text-primary"></i>Export to CSV</a></li>
                    <li><a class="dropdown-item" href="{{ path('admin_bicycle_export', app.request.query.all|merge({'format': 'excel'})) }}"><i class="fas fa-file-excel me-2 text-success"></i>Export to Excel</a></li>
                    <li><a class="dropdown-item" href="{{ path('admin_bicycle_export', app.request.query.all|merge({'format': 'pdf'})) }}"><i class="fas fa-file-pdf me-2 text-danger"></i>Export to PDF</a></li>
                </ul>
            </div>
            <button class="btn btn-light btn-lg shadow-sm" data-bs-toggle="modal" data-bs-target="#addBicycleModal">
                <i class="fas fa-plus-circle me-2"></i> Add New Bicycle
            </button>
            <button class="btn btn-outline-light btn-lg ms-2" data-bs-toggle="modal" data-bs-target="#scheduleMaintenance">
                <i class="fas fa-tools me-2"></i> Schedule Maintenance
            </button>
        </div>
    </div>
</div>

<div class="bicycles-dashboard">
    <!-- Quick Overview Cards with Animation -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card h-100 hover-card border-success border-start border-4 rounded-3 shadow-hover">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="d-inline-flex align-items-center justify-content-center bg-success bg-opacity-10 rounded-circle me-3" style="width: 48px; height: 48px;">
                            <i class="fas fa-check-circle fa-2x text-success pulse-animation"></i>
                        </div>
                        <div>
                            <h3 class="card-title h5 mb-0">Available Bikes</h3>
                            <p class="text-muted small mb-0">Ready for rental</p>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="display-6 fw-bold">{{ availableCount|default(0) }}</div>
                        <span class="badge bg-success bg-opacity-10 text-success px-3 py-2">
                            <i class="fas fa-chart-bar me-1"></i> {{ availableCount|default(0) > 0 ? (availableCount / (availableCount + inUseCount + maintenanceCount + chargingCount) * 100)|number_format(1) ~ '%' : '0%' }}
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card h-100 hover-card border-primary border-start border-4 rounded-3 shadow-hover">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="d-inline-flex align-items-center justify-content-center bg-primary bg-opacity-10 rounded-circle me-3" style="width: 48px; height: 48px;">
                            <i class="fas fa-bicycle fa-2x text-primary"></i>
                        </div>
                        <div>
                            <h3 class="card-title h5 mb-0">In Use</h3>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="display-6 fw-bold">{{ inUseCount|default(0) }}</div>
                        <span class="badge bg-primary bg-opacity-10 text-primary px-3 py-2">
                            <i class="fas fa-users me-1"></i> Active Rentals
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card h-100 hover-card border-warning border-start border-4 rounded-3 shadow-hover">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="d-inline-flex align-items-center justify-content-center bg-warning bg-opacity-10 rounded-circle me-3" style="width: 48px; height: 48px;">
                            <i class="fas fa-tools fa-2x text-warning"></i>
                        </div>
                        <div>
                            <h3 class="card-title h5 mb-0">Maintenance</h3>
                            <p class="text-muted small mb-0">Under repair</p>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="display-6 fw-bold">{{ maintenanceCount|default(0) }}</div>
                        <span class="badge bg-warning bg-opacity-10 text-warning px-3 py-2">
                            <i class="fas fa-wrench me-1"></i> Service Required
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card h-100 hover-card border-info border-start border-4 rounded-3 shadow-hover">
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="d-inline-flex align-items-center justify-content-center bg-info bg-opacity-10 rounded-circle me-3" style="width: 48px; height: 48px;">
                            <i class="fas fa-bolt fa-2x text-info"></i>
                        </div>
                        <div>
                            <h3 class="card-title h5 mb-0">Charging</h3>
                            <p class="text-muted small mb-0">Recharging</p>
                        </div>
                    </div>
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="display-6 fw-bold">{{ chargingCount|default(0) }}</div>
                        <span class="badge bg-info bg-opacity-10 text-info px-3 py-2">
                            <i class="fas fa-battery-half me-1"></i> Power Up
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Battery Statistics Card - Visual Enhancement -->
<div class="card mb-4 shadow-sm rounded-3 border-0 overflow-hidden">
    <div class="card-header bg-gradient-dark text-white d-flex justify-content-between align-items-center py-3">
        <h5 class="mb-0"><i class="fas fa-car-battery me-2 pulse-animation"></i>Battery Distribution</h5>
        <span class="badge bg-white text-dark">Fleet Health Indicator</span>
    </div>
    <div class="card-body p-0">
        {% set highCount = bicycles|filter(b => b.batteryLevel >= 90)|length %}
        {% set mediumCount = bicycles|filter(b => b.batteryLevel >= 50 and b.batteryLevel < 90)|length %}
        {% set lowCount = bicycles|filter(b => b.batteryLevel >= 25 and b.batteryLevel < 50)|length %}
        {% set criticalCount = bicycles|filter(b => b.batteryLevel < 25)|length %}
        {% set totalBikes = highCount + mediumCount + lowCount + criticalCount %}
        
        <div class="row g-0">
            <div class="col-md-3 p-4 text-center border-end">
                <div class="battery-status-circle bg-success bg-opacity-10 mx-auto mb-3">
                    <i class="fas fa-battery-full text-success"></i>
                    <span class="battery-percentage">{{ totalBikes > 0 ? ((highCount / totalBikes) * 100)|round }}% </span>
                </div>
                <h6 class="text-success fw-bold">90%+ Charge</h6>
                <div class="h3 mb-1">{{ highCount }}</div>
                <div class="text-muted small">Premium condition</div>
            </div>
            <div class="col-md-3 p-4 text-center border-end">
                <div class="battery-status-circle bg-primary bg-opacity-10 mx-auto mb-3">
                    <i class="fas fa-battery-three-quarters text-primary"></i>
                    <span class="battery-percentage">{{ totalBikes > 0 ? ((mediumCount / totalBikes) * 100)|round }}%</span>
                </div>
                <h6 class="text-primary fw-bold">50%-89% Charge</h6>
                <div class="h3 mb-1">{{ mediumCount }}</div>
                <div class="text-muted small">Good condition</div>
            </div>
            <div class="col-md-3 p-4 text-center border-end">
                <div class="battery-status-circle bg-warning bg-opacity-10 mx-auto mb-3">
                    <i class="fas fa-battery-half text-warning"></i>
                    <span class="battery-percentage">{{ totalBikes > 0 ? ((lowCount / totalBikes) * 100)|round }}%</span>
                </div>
                <h6 class="text-warning fw-bold">25%-49% Charge</h6>
                <div class="h3 mb-1">{{ lowCount }}</div>
                <div class="text-muted small">Needs charging soon</div>
            </div>
            <div class="col-md-3 p-4 text-center">
                <div class="battery-status-circle bg-danger bg-opacity-10 mx-auto mb-3">
                    <i class="fas fa-battery-quarter text-danger pulse-danger"></i>
                    <span class="battery-percentage">{{ totalBikes > 0 ? ((criticalCount / totalBikes) * 100)|round }}%</span>
                </div>
                <h6 class="text-danger fw-bold">Below 25% Charge</h6>
                <div class="h3 mb-1">{{ criticalCount }}</div>
                <div class="text-muted small">Immediate charging needed</div>
            </div>
        </div>
        <!-- Battery Progress Bar -->
        <div class="battery-health-bar">
            <div class="battery-segment bg-success" style="width: {{ totalBikes > 0 ? ((highCount / totalBikes) * 100)|round }}%"></div>
            <div class="battery-segment bg-primary" style="width: {{ totalBikes > 0 ? ((mediumCount / totalBikes) * 100)|round }}%"></div>
            <div class="battery-segment bg-warning" style="width: {{ totalBikes > 0 ? ((lowCount / totalBikes) * 100)|round }}%"></div>
            <div class="battery-segment bg-danger" style="width: {{ totalBikes > 0 ? ((criticalCount / totalBikes) * 100)|round }}%"></div>
        </div>
    </div>
</div>

    <!-- Actions & Filters - With Visual Enhancement -->
    <div class="row mb-4 g-4">
        <div class="col-lg-8">
            <div class="card shadow-sm border-0 rounded-3 overflow-hidden">
                <div class="card-header bg-light d-flex justify-content-between align-items-center py-3">
                    <h5 class="mb-0"><i class="fas fa-sliders-h me-2"></i>Smart Filters</h5>
                    <span class="badge bg-primary bg-opacity-10 text-primary">Find Bicycles Fast</span>
                </div>
                <div class="card-body">
                    <form action="{{ path('admin_bicycle_rentals', {'tab': 'bicycles'}) }}" method="GET" id="bicycleFilterForm">
                <div class="row g-3 mb-3">
                    <div class="col-lg-12">
                        <div class="search-box">
                            <div class="input-group">
                                <span class="input-group-text bg-primary text-white"><i class="fas fa-search"></i></span>
                                <input type="text" id="bicycleSearchInput" class="form-control" placeholder="Search by ID, model, status, or station..." value="{{ app.request.query.get('search') }}">
                                <button type="button" id="bicycleSearchClearBtn" class="btn btn-outline-secondary">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row g-3">
                            <div class="col-md-4">
                                <div class="form-floating">
                                    <select class="form-select" id="bicycleStatus" name="status">
                                        <option value="">All Statuses</option>
                                        <option value="available" {% if app.request.query.get('status') == 'available' %}selected{% endif %}>Available</option>
                                        <option value="in_use" {% if app.request.query.get('status') == 'in_use' %}selected{% endif %}>In Use</option>
                                        <option value="maintenance" {% if app.request.query.get('status') == 'maintenance' %}selected{% endif %}>Maintenance</option>
                                        <option value="charging" {% if app.request.query.get('status') == 'charging' %}selected{% endif %}>Charging</option>
                                        <option value="reserved" {% if app.request.query.get('status') == 'reserved' %}selected{% endif %}>Reserved</option>
                                    </select>
                                    <label for="bicycleStatus"><i class="fas fa-heartbeat me-1"></i>Status</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-floating">
                                    <select class="form-select" id="bicycleStation" name="station">
                                        <option value="">All Stations</option>
                                        {% for station in stations %}
                                            <option value="{{ station.idStation }}" {% if app.request.query.get('station') == station.idStation %}selected{% endif %}>
                                                {{ station.name }}
                                            </option>
                                        {% endfor %}
                                    </select>
                                    <label for="bicycleStation"><i class="fas fa-map-marker-alt me-1"></i>Station</label>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-floating">
                                    <select class="form-select" id="bicycleBattery" name="battery">
                                        <option value="">Any Level</option>
                                        <option value="90" {% if app.request.query.get('battery') == '90' %}selected{% endif %}>90%+ (Premium)</option>
                                        <option value="50" {% if app.request.query.get('battery') == '50' %}selected{% endif %}>50%+</option>
                                        <option value="25" {% if app.request.query.get('battery') == '25' %}selected{% endif %}>25%+</option>
                                        <option value="low" {% if app.request.query.get('battery') == 'low' %}selected{% endif %}>Low (< 25%)</option>
                                    </select>
                                    <label for="bicycleBattery"><i class="fas fa-battery-half me-1"></i>Battery Level</label>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="d-flex">
                                    <button type="submit" class="btn btn-primary btn-lg me-2">
                                        <i class="fas fa-filter me-2"></i>Apply Filters
                                    </button>
                                    <a href="{{ path('admin_bicycle_rentals', {'tab': 'bicycles'}) }}" class="btn btn-outline-secondary btn-lg">
                                        <i class="fas fa-sync me-2"></i>Reset
                                    </a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card shadow-sm border-0 rounded-3 overflow-hidden h-100">
                <div class="card-header bg-light d-flex justify-content-between align-items-center py-3">
                    <h5 class="mb-0"><i class="fas fa-bolt me-2"></i>Quick Actions</h5>
                    <span class="badge bg-primary bg-opacity-10 text-primary">Management Tools</span>
                </div>
                  <div class="card-body d-flex flex-column">
                    <div class="quick-action-buttons mt-2">
                        <button class="quick-action-btn btn-add" data-bs-toggle="modal" data-bs-target="#addBicycleModal">
                            <div class="icon-wrapper">
                                <i class="fas fa-plus"></i>
                            </div>
                            <span>Add New Bicycle</span>
                        </button>

                        <button class="quick-action-btn btn-assign" data-bs-toggle="modal" data-bs-target="#stationAssignModal">
                            <div class="icon-wrapper">
                                <i class="fas fa-map-pin"></i>
                            </div>
                            <span>Assign to Stations</span>
                        </button>

                        <button class="quick-action-btn btn-maintenance" data-bs-toggle="modal" data-bs-target="#scheduleMaintenance">
                            <div class="icon-wrapper">
                                <i class="fas fa-tools"></i>
                            </div>
                            <span>Schedule Maintenance</span>
                        </button>

                        <a href="{{ path('admin_bicycle_rentals', {'tab': 'bicycles', 'battery': 'low'}) }}" class="quick-action-btn btn-battery">
                            <div class="icon-wrapper">
                                <i class="fas fa-battery-quarter"></i>
                            </div>
                            <span>Low Battery Report</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bicycles Table/Grid View - Visually Enhanced -->
    {% if bicycles|length > 0 %}
        <div class="table-responsive">
            <table class="table table-hover align-middle bicycle-table" id="bicyclesTable">
                <thead>
                    <tr>
                        <th scope="col" class="text-center">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="selectAllBicycles">
                            </div>
                        </th>
                        <th scope="col">ID</th>
                        <th scope="col">Status</th>
                        <th scope="col">Battery</th>
                        <th scope="col">Range</th>
                        <th scope="col">Station</th>
                        <th scope="col">Last Updated</th>
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for bicycle in bicycles %}
                        <tr data-bicycle-id="{{ bicycle.idBike }}">
                            <td class="text-center">
                                <div class="form-check">
                                    <input class="form-check-input bicycle-checkbox" type="checkbox" value="{{ bicycle.idBike }}">
                                </div>
                            </td>
                            <td>
                                <span class="fw-medium">BIKE-{{ '%04d'|format(bicycle.idBike) }}</span>
                            </td>
                            <td>
                                {% if bicycle.status.value == 'available' %}
                                    <span class="badge bg-success-subtle text-success">Available</span>
                                {% elseif bicycle.status.value == 'in_use' %}
                                    <span class="badge bg-primary-subtle text-primary">In Use</span>
                                {% elseif bicycle.status.value == 'maintenance' %}
                                    <span class="badge bg-warning-subtle text-warning">Maintenance</span>
                                {% elseif bicycle.status.value == 'reserved' %}
                                    <span class="badge bg-info-subtle text-info">Reserved</span>
                                {% elseif bicycle.status.value == 'charging' %}
                                    <span class="badge bg-secondary-subtle text-secondary">Charging</span>
                                {% else %}
                                    <span class="badge bg-secondary-subtle text-secondary">{{ bicycle.status.value }}</span>
                                {% endif %}
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="battery-indicator me-2 {{ bicycle.batteryLevel >= 90 ? 'high' : (bicycle.batteryLevel >= 50 ? 'medium' : (bicycle.batteryLevel >= 25 ? 'low' : 'critical')) }}">
                                        <i class="fas fa-battery-{{ bicycle.batteryLevel >= 90 ? 'full' : (bicycle.batteryLevel >= 50 ? 'three-quarters' : (bicycle.batteryLevel >= 25 ? 'half' : 'quarter')) }}"></i>
                                    </div>
                                    <span class="fw-medium">{{ bicycle.batteryLevel }}%</span>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-route text-muted me-1"></i>
                                    <span>{{ bicycle.rangeKm }} km</span>
                                </div>
                            </td>
                            <td>
                                {% if bicycle.bicycleStation %}
                                    <a href="{{ path('admin_bicycle_station_detail', {'id': bicycle.bicycleStation.idStation}) }}">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-map-marker-alt text-muted me-2"></i>
                                            <span>{{ bicycle.bicycleStation.name }}</span>
                                        </div>
                                    </a>
                                {% else %}
                                    <span class="text-muted fst-italic">No station assigned</span>
                                {% endif %}
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <i class="fas fa-calendar-alt text-muted me-1"></i>
                                    <span>{{ bicycle.lastUpdated|date('M d, Y H:i') }}</span>
                                </div>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <div class="dropdown">
                                        <button class="btn btn-sm btn-icon btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li><a class="dropdown-item" href="{{ path('admin_bicycle_details', {'id': bicycle.idBike}) }}">
                                                <i class="fas fa-eye me-2"></i> View Details
                                            </a></li>
                                            <li><a class="dropdown-item edit-bicycle" href="#" data-bicycle-id="{{ bicycle.idBike }}">
                                                <i class="fas fa-edit me-2"></i> Edit Bicycle
                                            </a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#stationAssignModal" data-bicycle-id="{{ bicycle.idBike }}">
                                                <i class="fas fa-map-marker-alt me-2"></i> Change Station
                                            </a></li>
                                            <li class="dropdown-submenu">
                                                <a class="dropdown-item dropdown-toggle" href="#">
                                                    <i class="fas fa-exchange-alt me-2"></i> Change Status
                                                </a>
                                                <ul class="dropdown-menu">
                                                    {% if bicycle.status.value != 'available' %}
                                                    <li><a class="dropdown-item" href="{{ path('admin_bicycle_change_status', {'id': bicycle.idBike, 'status': 'available'}) }}">
                                                        <i class="fas fa-check text-success me-2"></i>Mark Available
                                                    </a></li>
                                                    {% endif %}
                                                    {% if bicycle.status.value != 'maintenance' %}
                                                    <li><a class="dropdown-item" href="{{ path('admin_bicycle_change_status', {'id': bicycle.idBike, 'status': 'maintenance'}) }}">
                                                        <i class="fas fa-tools text-warning me-2"></i>Send to Maintenance
                                                    </a></li>
                                                    {% endif %}
                                                    {% if bicycle.status.value != 'charging' %}
                                                    <li><a class="dropdown-item" href="{{ path('admin_bicycle_change_status', {'id': bicycle.idBike, 'status': 'charging'}) }}">
                                                        <i class="fas fa-bolt text-info me-2"></i>Send to Charging
                                                    </a></li>
                                                    {% endif %}
                                                </ul>
                                            </li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li>
                                                <button class="dropdown-item text-danger delete-bicycle" type="button" data-bicycle-id="{{ bicycle.idBike }}">
                                                    <i class="fas fa-trash me-2"></i> Delete Bicycle
                                                </button>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    {% else %}
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i> No bicycles found.
        </div>
    {% endif %}
    
    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-4">
        {{ knp_pagination_render(bicycles, 'back-office/bicycle/ajax-pagination.html.twig') }}
    </div>
</div>

<!-- Add Bicycle Modal -->
<div class="modal fade" id="addBicycleModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="addBicycleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-gradient-primary-to-secondary text-white">
                <h5 class="modal-title" id="addBicycleModalLabel">
                    <i class="fas fa-plus me-2"></i>Add New Bicycle
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                {% if addBicycleForm %}
               {{ form_start(addBicycleForm, {
    'attr': {'novalidate': 'novalidate'},
    'action': path('admin_bicycle_add'), 
    'method': 'POST'
}) }}


                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(addBicycleForm.battery_level, 'Battery Level (%)', {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    {{ form_widget(addBicycleForm.battery_level, {
                                        'attr': {
                                            'class': 'form-control' ~ (addBicycleForm.battery_level.vars.valid ? '' : ' is-invalid'),
                                            'min': '0',
                                            'max': '100'
                                        }
                                    }) }}
                                    <span class="input-group-text"><i class="fas fa-battery-half"></i></span>
                                    {{ form_errors(addBicycleForm.battery_level, {'attr': {'class': 'invalid-feedback'}}) }}
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(addBicycleForm.range_km, 'Range (km)', {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    {{ form_widget(addBicycleForm.range_km, {
                                        'attr': {
                                            'class': 'form-control' ~ (addBicycleForm.range_km.vars.valid ? '' : ' is-invalid')
                                        }
                                    }) }}
                                    <span class="input-group-text"><i class="fas fa-route"></i></span>
                                    {{ form_errors(addBicycleForm.range_km, {'attr': {'class': 'invalid-feedback'}}) }}
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(addBicycleForm.status, 'Status', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(addBicycleForm.status, {
                                    'attr': {
                                        'class': 'form-select' ~ (addBicycleForm.status.vars.valid ? '' : ' is-invalid')
                                    }
                                }) }}
                                {{ form_errors(addBicycleForm.status, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(addBicycleForm.bicycleStation, 'Station', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(addBicycleForm.bicycleStation, {
                                    'attr': {
                                        'class': 'form-select' ~ (addBicycleForm.bicycleStation.vars.valid ? '' : ' is-invalid')
                                    }
                                }) }}
                                {{ form_errors(addBicycleForm.bicycleStation, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(addBicycleForm.last_updated, 'Last Updated', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(addBicycleForm.last_updated, {
                                    'attr': {
                                        'class': 'form-control' ~ (addBicycleForm.last_updated.vars.valid ? '' : ' is-invalid')
                                    }
                                }) }}
                                {{ form_errors(addBicycleForm.last_updated, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i> Save Bicycle
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-1"></i> Cancel
                        </button>
                    </div>
                {{ form_end(addBicycleForm) }}
                {% else %}
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> Form is not available. Please reload the page or contact support.
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<!-- Hidden template for edit form -->
<template id="editBicycleFormTemplate">
    {{ form_start(editBicycleForm, { 'attr': { 'novalidate': 'novalidate', 'id': 'editBicycleForm', 'data-action-url': path('admin_bicycle_edit', {'id': '__bicycleId__'}) } }) }}
        <input type="hidden" name="bicycleId" class="bicycle-id-field">
        <div class="row g-3">
            <div class="col-md-6">
                <div class="form-group">
                    {{ form_label(editBicycleForm.battery_level, 'Battery Level (%)', {'label_attr': {'class': 'form-label'}}) }}
                    <div class="input-group">
                        {{ form_widget(editBicycleForm.battery_level, {
                            'attr': {
                                'class': 'form-control' ~ (editBicycleForm.battery_level.vars.valid ? '' : ' is-invalid'),
                                'min': '0',
                                'max': '100'
                            }
                        }) }}
                        <span class="input-group-text"><i class="fas fa-battery-half"></i></span>
                        {{ form_errors(editBicycleForm.battery_level, {'attr': {'class': 'invalid-feedback'}}) }}
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    {{ form_label(editBicycleForm.range_km, 'Range (km)', {'label_attr': {'class': 'form-label'}}) }}
                    <div class="input-group">
                        {{ form_widget(editBicycleForm.range_km, {
                            'attr': {
                                'class': 'form-control' ~ (editBicycleForm.range_km.vars.valid ? '' : ' is-invalid')
                            }
                        }) }}
                        <span class="input-group-text"><i class="fas fa-route"></i></span>
                        {{ form_errors(editBicycleForm.range_km, {'attr': {'class': 'invalid-feedback'}}) }}
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    {{ form_label(editBicycleForm.status, 'Status', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(editBicycleForm.status, {
                        'attr': {
                            'class': 'form-select' ~ (editBicycleForm.status.vars.valid ? '' : ' is-invalid')
                        }
                    }) }}
                    {{ form_errors(editBicycleForm.status, {'attr': {'class': 'invalid-feedback'}}) }}
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    {{ form_label(editBicycleForm.bicycleStation, 'Station', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(editBicycleForm.bicycleStation, {
                        'attr': {
                            'class': 'form-select' ~ (editBicycleForm.bicycleStation.vars.valid ? '' : ' is-invalid')
                        }
                    }) }}
                    {{ form_errors(editBicycleForm.bicycleStation, {'attr': {'class': 'invalid-feedback'}}) }}
                </div>
            </div>
            <div class="col-12">
                <div class="form-group">
                    {{ form_label(editBicycleForm.last_updated, 'Last Updated', {'label_attr': {'class': 'form-label'}}) }}
                    {{ form_widget(editBicycleForm.last_updated, {
                        'attr': {
                            'class': 'form-control' ~ (editBicycleForm.last_updated.vars.valid ? '' : ' is-invalid')
                        }
                    }) }}
                    {{ form_errors(editBicycleForm.last_updated, {'attr': {'class': 'invalid-feedback'}}) }}
                </div>
            </div>
        </div>
        <div class="mt-4">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save me-1"></i> Update Bicycle
            </button>
            <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                <i class="fas fa-times me-1"></i> Cancel
            </button>
        </div>
    {{ form_end(editBicycleForm) }}
</template>

<!-- Delete Bicycle Modal -->
<div class="modal fade" id="deleteBicycleModal" data-bs-backdrop="false" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteBicycleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteBicycleModalLabel">
                    <i class="fas fa-trash me-2"></i>Delete Bicycle
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3 bicycle-preview">
                    <div class="bicycle-icon-container mx-auto mb-3">
                        <i class="fas fa-bicycle" style="font-size: 32px;"></i>
                    </div>
                    <h5>Bicycle #<span id="deleteBicycleId"></span></h5>
                </div>
                
                <div class="bicycle-delete-info mb-3">
                    <div class="row">
                        <div class="col-6 mb-2">
                            <span class="fw-bold">Type:</span>
                            <span id="deleteBicycleType">--</span>
                        </div>
                        <div class="col-6 mb-2">
                            <span class="fw-bold">Battery:</span>
                            <span id="deleteBicycleBattery">--</span>
                        </div>
                        <div class="col-6 mb-2">
                            <span class="fw-bold">Range:</span>
                            <span id="deleteBicycleRange">--</span>
                        </div>
                        <div class="col-6 mb-2">
                            <span class="fw-bold">Status:</span>
                            <span id="deleteBicycleStatus">--</span>
                        </div>
                        <div class="col-12 mb-2">
                            <span class="fw-bold">Station:</span>
                            <span id="deleteBicycleStation">--</span>
                        </div>
                    </div>
                </div>
                
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <span><strong>Warning:</strong> This action cannot be undone and will permanently remove this bicycle from your fleet.</span>
                </div>
                
                <div class="form-check mt-3">
                    <input class="form-check-input" type="checkbox" id="confirmBicycleDelete" required>
                    <label class="form-check-label" for="confirmBicycleDelete">
                        I understand that this action is permanent
                    </label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <form action="{{ path('admin_bicycle_delete') }}" method="POST">
                    <input type="hidden" name="bicycleId" id="deleteBicycleIdInput">
                    <button type="submit" id="deleteBicycleBtn" class="btn btn-danger" disabled>
                        <i class="fas fa-trash me-1"></i> Delete Bicycle
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Station Assignment Modal -->
<div class="modal fade" id="stationAssignModal" data-bs-backdrop="false" tabindex="-1" aria-labelledby="stationAssignModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-gradient-primary-to-secondary text-white">
                <h5 class="modal-title" id="stationAssignModalLabel">
                    <i class="fas fa-map-marker-alt me-2"></i>Assign Bicycles to Station
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                {% if stationAssignForm %}
                {{ form_start(stationAssignForm, {'attr': {'novalidate': 'novalidate', 'id': 'stationAssignForm'}}) }}
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(stationAssignForm.bicycles, 'Select Bicycles', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(stationAssignForm.bicycles, {
                                    'attr': {
                                        'class': 'form-select' ~ (stationAssignForm.bicycles.vars.valid ? '' : ' is-invalid'),
                                        'multiple': 'multiple',
                                        'data-placeholder': 'Choose bicycles to assign...',
                                        'style': 'width: 100%'
                                    }
                                }) }}
                                {{ form_errors(stationAssignForm.bicycles, {'attr': {'class': 'invalid-feedback'}}) }}
                                <div class="form-text text-muted">Select multiple bicycles to assign</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(stationAssignForm.station, 'Destination Station', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(stationAssignForm.station, {
                                    'attr': {
                                        'class': 'form-select' ~ (stationAssignForm.station.vars.valid ? '' : ' is-invalid')
                                    }
                                }) }}
                                {{ form_errors(stationAssignForm.station, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                        <div class="col-12 mt-3">
                            <div class="card bg-light border">
                                <div class="card-body">
                                    <h6 class="mb-3"><i class="fas fa-info-circle me-2"></i>Station Information</h6>
                                    <div id="stationInfo" class="d-flex align-items-center">
                                        <div id="stationCapacityVisual" class="me-3" style="height: 50px; width: 50px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: bold; background-color: rgba(13, 110, 253, 0.1); color: #0d6efd;">
                                            --
                                        </div>
                                        <div>
                                            <div id="stationName" class="fw-bold mb-1">Please select a station</div>
                                            <div class="d-flex align-items-center text-muted small">
                                                <div class="me-3"><i class="fas fa-bicycle me-1"></i>Capacity: <span id="stationCapacity">--</span></div>
                                                <div><i class="fas fa-check me-1"></i>Available: <span id="stationAvailable">--</span></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i> Assign Bicycles
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-1"></i> Cancel
                        </button>
                    </div>
                {{ form_end(stationAssignForm) }}
                {% else %}
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> Station assignment form is not available. Please reload the page or contact support.
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<!-- Maintenance Scheduling Modal -->
<div class="modal fade" id="scheduleMaintenance" data-bs-backdrop="false" tabindex="-1" aria-labelledby="scheduleMaintenanceLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="scheduleMaintenanceLabel">
                    <i class="fas fa-tools me-2"></i>Schedule Maintenance
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                {% if maintenanceForm %}
                {{ form_start(maintenanceForm, {'attr': {'novalidate': 'novalidate', 'id': 'maintenanceForm'}}) }}
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(maintenanceForm.bicycles, 'Select Bicycles', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(maintenanceForm.bicycles, {
                                    'attr': {
                                        'class': 'form-select' ~ (maintenanceForm.bicycles.vars.valid ? '' : ' is-invalid'),
                                        'multiple': 'multiple',
                                        'data-placeholder': 'Choose bicycles for maintenance...',
                                        'style': 'width: 100%'
                                    }
                                }) }}
                                {{ form_errors(maintenanceForm.bicycles, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(maintenanceForm.maintenanceType, 'Maintenance Type', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(maintenanceForm.maintenanceType, {
                                    'attr': {
                                        'class': 'form-select' ~ (maintenanceForm.maintenanceType.vars.valid ? '' : ' is-invalid')
                                    }
                                }) }}
                                {{ form_errors(maintenanceForm.maintenanceType, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(maintenanceForm.scheduledDate, 'Scheduled Date', {'label_attr': {'class': 'form-label'}}) }}
                                <div class="input-group">
                                    {{ form_widget(maintenanceForm.scheduledDate, {
                                        'attr': {
                                            'class': 'form-control' ~ (maintenanceForm.scheduledDate.vars.valid ? '' : ' is-invalid')
                                        }
                                    }) }}
                                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                    {{ form_errors(maintenanceForm.scheduledDate, {'attr': {'class': 'invalid-feedback'}}) }}
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                {{ form_label(maintenanceForm.priority, 'Priority', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(maintenanceForm.priority, {
                                    'attr': {
                                        'class': 'form-select' ~ (maintenanceForm.priority.vars.valid ? '' : ' is-invalid')
                                    }
                                }) }}
                                {{ form_errors(maintenanceForm.priority, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                {{ form_label(maintenanceForm.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                                {{ form_widget(maintenanceForm.description, {
                                    'attr': {
                                        'class': 'form-control' ~ (maintenanceForm.description.vars.valid ? '' : ' is-invalid'),
                                        'rows': '3'
                                    }
                                }) }}
                                {{ form_errors(maintenanceForm.description, {'attr': {'class': 'invalid-feedback'}}) }}
                            </div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <button type="submit" class="btn btn-warning text-dark">
                            <i class="fas fa-tools me-1"></i> Schedule Maintenance
                        </button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-1"></i> Cancel
                        </button>
                    </div>
                {{ form_end(maintenanceForm) }}
                {% else %}
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> Maintenance form is not available. Please reload the page or contact support.
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>

<!-- Bicycle Status Change Form -->
<form id="bicycleStatusForm" method="POST" action="{{ path('admin_bicycle_change_status') }}">
    <input type="hidden" id="statusChangeBicycleId" name="bicycleId">
    <input type="hidden" id="statusChangeValue" name="status">
</form>

<!-- JavaScript for bicycle form validation -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Client-side validation functions
    function validateBicycleForm(form) {
        let isValid = true;
        const errorMessages = [];
        
        // Battery Level validation
        const batteryInput = form.querySelector('[name$="[battery_level]"]');
        if (batteryInput) {
            const batteryValue = parseFloat(batteryInput.value);
            if (isNaN(batteryValue) || batteryValue < 0 || batteryValue > 100) {
                isValid = false;
                addError(batteryInput, 'Battery level must be between 0 and 100%');
                errorMessages.push('Battery level must be between 0 and 100%');
            } else {
                removeError(batteryInput);
            }
        }
        
        // Range validation
        const rangeInput = form.querySelector('[name$="[range_km]"]');
        if (rangeInput) {
            const rangeValue = parseFloat(rangeInput.value);
            if (isNaN(rangeValue) || rangeValue < 0) {
                isValid = false;
                addError(rangeInput, 'Range must be a positive number');
                errorMessages.push('Range must be a positive number');
            } else {
                removeError(rangeInput);
            }
        }
        
        // Status validation
        const statusInput = form.querySelector('[name$="[status]"]');
        if (statusInput && statusInput.value === '') {
            isValid = false;
            addError(statusInput, 'Status is required');
            errorMessages.push('Status is required');
        } else {
            removeError(statusInput);
        }
        
        // Last updated validation
        const lastUpdatedInput = form.querySelector('[name$="[last_updated]"]');
        if (lastUpdatedInput && lastUpdatedInput.value === '') {
            isValid = false;
            addError(lastUpdatedInput, 'Last updated date is required');
            errorMessages.push('Last updated date is required');
        } else {
            removeError(lastUpdatedInput);
        }
        
        // Station validation - Only if bicycle status is "Available"
        const stationInput = form.querySelector('[name$="[bicycleStation]"]');
        if (statusInput && statusInput.value === 'available' && stationInput && stationInput.value === '') {
            isValid = false;
            addError(stationInput, 'Station is required for available bicycles');
            errorMessages.push('Station is required for available bicycles');
        } else {
            removeError(stationInput);
        }
        
        return { isValid, errorMessages };
    }
    
    function addError(input, message) {
        input.classList.add('is-invalid');
        
        // Create or update error message
        let errorDiv = input.parentNode.querySelector('.invalid-feedback');
        if (!errorDiv) {
            errorDiv = document.createElement('div');
            errorDiv.className = 'invalid-feedback';
            input.parentNode.appendChild(errorDiv);
        }
        errorDiv.textContent = message;
    }
    
    function removeError(input) {
        input.classList.remove('is-invalid');
        const errorDiv = input.parentNode.querySelector('.invalid-feedback');
        if (errorDiv) {
            errorDiv.textContent = '';
        }
    }
    
    // Add Bicycle Form Validation
    const addBicycleForm = document.querySelector('#addBicycleModal form');
    if (addBicycleForm) {
        addBicycleForm.addEventListener('submit', function(e) {
            const { isValid, errorMessages } = validateBicycleForm(this);
            
            if (!isValid) {
                e.preventDefault();
                e.stopPropagation();
                
                // Show error alert
                const errorAlert = document.createElement('div');
                errorAlert.className = 'alert alert-danger mt-3';
                errorAlert.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i><strong>Error:</strong> Please correct the following issues:<ul>' +
                    errorMessages.map(msg => `<li>${msg}</li>`).join('') + '</ul>';
                
                // Remove any existing error alerts
                const existingAlerts = this.querySelectorAll('.alert');
                existingAlerts.forEach(alert => alert.remove());
                
                // Add new error alert at the top of the form
                this.insertAdjacentElement('afterbegin', errorAlert);
                
                // Scroll to the first error
                const firstError = this.querySelector('.is-invalid');
                if (firstError) {
                    firstError.focus();
                }
            }
        });
    }
    
    // Edit Bicycle Form Validation
    const editBicycleForm = document.querySelector('#editBicycleForm');
    if (editBicycleForm) {
        editBicycleForm.addEventListener('submit', function(e) {
            const { isValid, errorMessages } = validateBicycleForm(this);
            
            if (!isValid) {
                e.preventDefault();
                e.stopPropagation();
                
                // Show error alert
                const errorAlert = document.createElement('div');
                errorAlert.className = 'alert alert-danger mt-3';
                errorAlert.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i><strong>Error:</strong> Please correct the following issues:<ul>' +
                    errorMessages.map(msg => `<li>${msg}</li>`).join('') + '</ul>';
                
                // Remove any existing error alerts
                const existingAlerts = this.querySelectorAll('.alert');
                existingAlerts.forEach(alert => alert.remove());
                
                // Add new error alert at the top of the form
                this.insertAdjacentElement('afterbegin', errorAlert);
                
                // Scroll to the first error
                const firstError = this.querySelector('.is-invalid');
                if (firstError) {
                    firstError.focus();
                }
            } else {
                // If valid, update the form action with the correct ID before submitting
                const bicycleId = this.querySelector('.bicycle-id-field').value;
                const actionUrl = this.getAttribute('data-action-url').replace('__bicycleId__', bicycleId);
                this.action = actionUrl;
            }
        });
    }
    
    // Real-time validation on input
    document.querySelectorAll('#addBicycleModal input, #addBicycleModal select, #editBicycleModal input, #editBicycleModal select').forEach(input => {
        input.addEventListener('change', function() {
            const parent = this.closest('form');
            if (parent) {
                // Only validate the changed field
                if (this.name.includes('battery_level')) {
                    const value = parseFloat(this.value);
                    if (isNaN(value) || value < 0 || value > 100) {
                        addError(this, 'Battery level must be between 0 and 100%');
                    } else {
                        removeError(this);
                    }
                } else if (this.name.includes('range_km')) {
                    const value = parseFloat(this.value);
                    if (isNaN(value) || value < 0) {
                        addError(this, 'Range must be a positive number');
                    } else {
                        removeError(this);
                    }
                } else if (this.name.includes('status')) {
                    if (this.value === '') {
                        addError(this, 'Status is required');
                    } else {
                        removeError(this);
                        
                        // Check if status is "Available", then station is required
                        const stationInput = parent.querySelector('[name$="[bicycleStation]"]');
                        if (this.value === 'available' && stationInput && stationInput.value === '') {
                            addError(stationInput, 'Station is required for available bicycles');
                        } else if (stationInput) {
                            removeError(stationInput);
                        }
                    }
                } else if (this.name.includes('bicycleStation')) {
                    const statusInput = parent.querySelector('[name$="[status]"]');
                    if (statusInput && statusInput.value === 'available' && this.value === '') {
                        addError(this, 'Station is required for available bicycles');
                    } else {
                        removeError(this);
                    }
                } else if (this.name.includes('last_updated')) {
                    if (this.value === '') {
                        addError(this, 'Last updated date is required');
                    } else {
                        removeError(this);
                    }
                }
            }
        });
    });
    
    // Handle loading bicycle data for edit with improved error handling
    document.querySelectorAll('.edit-bicycle').forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            const bicycleId = this.getAttribute('data-bicycle-id');
            
            if (bicycleId) {
                // Show loading state
                const modal = new bootstrap.Modal(document.getElementById('editBicycleModal'));
                const modalBody = document.getElementById('editBicycleModal').querySelector('.modal-body');
                
                // Add loading indicator
                modalBody.innerHTML = `
                    <div class="text-center py-4">
                        <div class="spinner-border text-primary mb-3" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p>Loading bicycle data...</p>
                    </div>
                `;
                
                modal.show();
                
                // Fetch bicycle data with improved error handling
                fetch(`/admin/bicycle/bicycle/${bicycleId}/data`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`Server returned ${response.status}: ${response.statusText}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Restore the form content
                        modalBody.innerHTML = document.getElementById('editBicycleFormTemplate').innerHTML;
                        
                        // Set form hidden id field
                        const idField = document.querySelector('.bicycle-id-field');
                        if (idField) idField.value = bicycleId;

                        // Set battery level
                        const batteryField = document.querySelector('#editBicycleForm [name$="[battery_level]"]');
                        if (batteryField) batteryField.value = data.batteryLevel;

                        // Set range
                        const rangeField = document.querySelector('#editBicycleForm [name$="[range_km]"]');
                        if (rangeField) rangeField.value = data.rangeKm;

                        // Set status select
                        const statusSelect = document.querySelector('#editBicycleForm [name$="[status]"]');
                        if (statusSelect) {
                            Array.from(statusSelect.options).forEach(option => {
                                if (option.value === data.status.value) {
                                    option.selected = true;
                                }
                            });
                        }
                        
                        // Set station select if available
                        const stationSelect = document.querySelector('#editBicycleForm [name$="[bicycleStation]"]');
                        if (stationSelect && data.bicycleStation) {
                            Array.from(stationSelect.options).forEach(option => {
                                if (option.value === data.bicycleStation.idStation.toString()) {
                                    option.selected = true;
                                }
                            });
                        }
                        
                        // Set last updated
                        const lastUpdatedField = document.querySelector('#editBicycleForm [name$="[last_updated]"]');
                        if (lastUpdatedField) lastUpdatedField.value = data.lastUpdated;
                    })
                    .catch(error => {
                        console.error('Error loading bicycle data:', error);
                        modalBody.innerHTML = `
                            <div class="alert alert-danger">
                                <h5 class="alert-heading"><i class="fas fa-exclamation-triangle me-2"></i>Error Loading Data</h5>
                                <p>There was a problem loading the bicycle data: ${error.message}</p>
                                <hr>
                                <p class="mb-0">Please try again or refresh the page.</p>
                            </div>
                            <div class="text-center mt-3">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary reload-form-btn">
                                    <i class="fas fa-sync-alt me-2"></i>Try Again
                                </button>
                            </div>
                        `;
                        
                        // Add event listener for the reload button
                        const reloadBtn = modalBody.querySelector('.reload-form-btn');
                        if (reloadBtn) {
                            reloadBtn.addEventListener('click', function() {
                                // Trigger the edit button click event again
                                button.click();
                            });
                        }
                    });
            }
        });
    });
    
    // Client-side search functionality for bicycles
    const bicycleSearchInput = document.getElementById('bicycleSearchInput');
    const bicycleSearchClearBtn = document.getElementById('bicycleSearchClearBtn');
    
    if (bicycleSearchInput) {
        bicycleSearchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase().trim();
            filterBicyclesTable(searchTerm);
        });
        
        // Clear search button
        if (bicycleSearchClearBtn) {
            bicycleSearchClearBtn.addEventListener('click', function() {
                bicycleSearchInput.value = '';
                filterBicyclesTable(''); // Reset filter
            });
        }
    }
    
    // Function to filter bicycles table based on search term
    function filterBicyclesTable(searchTerm) {
        const tableRows = document.querySelectorAll('#bicyclesTable tbody tr');
        let hasResults = false;
        
        // Add loading effect
        document.querySelector('#bicyclesTable').classList.add('opacity-50');
        
        tableRows.forEach(row => {
            if (!searchTerm) {
                // If search is empty, show all rows
                row.style.display = '';
                hasResults = true;
            } else {
                const cells = row.querySelectorAll('td');
                let rowMatches = false;
                
                // Check each cell for match
                cells.forEach(cell => {
                    const cellText = cell.textContent.toLowerCase();
                    if (cellText.includes(searchTerm)) {
                        rowMatches = true;
                    }
                });
                
                // Show or hide row based on match
                if (rowMatches) {
                    row.style.display = '';
                    hasResults = true;
                } else {
                    row.style.display = 'none';
                }
            }
        });
        
        // Show empty state if no results
        const emptyStateRow = document.querySelector('.empty-bicycle-search-results');
        if (!hasResults) {
            if (!emptyStateRow) {
                const tbody = document.querySelector('#bicyclesTable tbody');
                const newRow = document.createElement('tr');
                newRow.className = 'empty-bicycle-search-results';
                newRow.innerHTML = `
                    <td colspan="8">
                        <div class="text-center py-4">
                            <div class="mb-3">
                                <i class="fas fa-search fa-3x text-muted opacity-50"></i>
                            </div>
                            <h5>No bicycles found</h5>
                            <p class="text-muted mb-3">No bicycle records match your search criteria</p>
                            <button type="button" class="btn btn-primary clear-bicycle-search-btn">
                                <i class="fas fa-times-circle me-2"></i>Clear Search
                            </button>
                        </div>
                    </td>
                `;
                tbody.appendChild(newRow);
                
                // Add event listener to clear search button
                newRow.querySelector('.clear-bicycle-search-btn').addEventListener('click', function() {
                    bicycleSearchInput.value = '';
                    filterBicyclesTable('');
                });
            }
        } else if (emptyStateRow) {
            emptyStateRow.remove();
        }
        
        // Remove loading effect with small delay for visual feedback
        setTimeout(() => {
            document.querySelector('#bicyclesTable').classList.remove('opacity-50');
        }, 200);
    }
});
</script>