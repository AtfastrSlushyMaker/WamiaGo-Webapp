{% block title %}Bicycle Stations Dashboard | WamiaGo{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <link rel="stylesheet" href="{{ asset('css/back/bicycle/station.css') }}?v={{ 'now'|date('YmdHi') }}">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@2.32.0/tabler-icons.min.css">
    <link rel="stylesheet" href="{{ asset('css/back/bicycle/station-edit-modal.css') }}">
    <link rel="stylesheet" href="{{ asset('css/back/bicycle/station-edit-modal.css') }}">
{% endblock %}
{% block header %}
<div class="header-section mb-4">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="h3 mb-0 fw-bold">Bicycle Station Network</h1>
            <p class="text-muted">Live overview of all bicycle stations in the network</p>
        </div>
        <div class="header-actions">
            <button class="btn btn-outline-secondary me-2" id="refreshStations">
                <i class="ti ti-refresh"></i> Refresh Data
            </button>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#stationFormModal">
                <i class="ti ti-plus"></i> Add Station
            </button>
        </div>
    </div>
</div>
{% endblock %}

{% block content %}
                    <!-- Enhanced stats with visual indicators -->
                    <div class="row g-4 mb-4">
                        <!-- Active stations card -->
                        <div class="col-xl-3 col-md-6">
                            <div class="card station-stat-card border-0 h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="text-muted fw-semibold d-block">Active Stations</span>
                                            <h3 class="mt-2 mb-0 fw-bold">{{ stationCounts.active }}</h3>
                                            {% set activePercentage = (stationCounts.active / stations|length * 100)|round %}
                                            <div class="small mt-2">
                                                <span class="text-success">
                                                    <i class="ti ti-trending-up me-1"></i> {{ activePercentage }}%
                                                </span> of network
                                            </div>
                                        </div>
                                        <div class="stats-icon bg-success-subtle">
                                            <i class="ti ti-map-pin-check text-success"></i>
                                        </div>
                                    </div>
                                    <div class="progress mt-3" style="height: 6px">
                                        <div class="progress-bar bg-success" style="width: {{ activePercentage }}%" role="progressbar"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Total bicycle capacity -->
                        <div class="col-xl-3 col-md-6">
                            <div class="card station-stat-card border-0 h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="text-muted fw-semibold d-block">Total Docks</span>
                                            <h3 class="mt-2 mb-0 fw-bold">{{ totalCapacity|default(0) }}</h3>
                                            <div class="small mt-2">
                                                <span class="text-info">
                                                    <i class="ti ti-arrow-right me-1"></i> {{ (totalCapacity / stations|length)|round(1) }} avg per station
                                                </span>
                                            </div>
                                        </div>
                                        <div class="stats-icon bg-primary-subtle">
                                            <i class="ti ti-bike text-primary"></i>
                                        </div>
                                    </div>
                                    {% set availableBikesTotal = stations|reduce((sum, station) => sum + station.availableBikes, 0) %}
                                    {% set bikeUsagePercentage = (availableBikesTotal / totalCapacity * 100)|round %}
                                    <div class="progress mt-3" style="height: 6px">
                                        <div class="progress-bar bg-primary" style="width: {{ bikeUsagePercentage }}%" role="progressbar"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Maintenance stations -->
                        <div class="col-xl-3 col-md-6">
                            <div class="card station-stat-card border-0 h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="text-muted fw-semibold d-block">Under Maintenance</span>
                                            <h3 class="mt-2 mb-0 fw-bold">{{ stationCounts.maintenance }}</h3>
                                            {% set maintenancePercentage = (stationCounts.maintenance / stations|length * 100)|round %}
                                            <div class="small mt-2">
                                                <span class="text-warning">
                                                    <i class="ti ti-tools me-1"></i> {{ maintenancePercentage }}%
                                                </span> of network
                                            </div>
                                        </div>
                                        <div class="stats-icon bg-warning-subtle">
                                            <i class="ti ti-barrier-block text-warning"></i>
                                        </div>
                                    </div>
                                    <div class="progress mt-3" style="height: 6px">
                                        <div class="progress-bar bg-warning" style="width: {{ maintenancePercentage }}%" role="progressbar"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Available bikes -->
                        <div class="col-xl-3 col-md-6">
                            <div class="card station-stat-card border-0 h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <span class="text-muted fw-semibold d-block">Available Bikes</span>
                                            <h3 class="mt-2 mb-0 fw-bold">{{ stations|reduce((sum, station) => sum + station.availableBikes, 0) }}</h3>
                                            {% set availabilityPercentage = (stations|reduce((sum, station) => sum + station.availableBikes, 0) / totalCapacity * 100)|round %}
                                            <div class="small mt-2">
                                                <span class="{% if availabilityPercentage < 30 %}text-danger{% else %}text-success{% endif %}">
                                                    <i class="ti ti-percentage me-1"></i> {{ availabilityPercentage }}%
                                                </span> availability
                                            </div>
                                        </div>
                                        <div class="stats-icon bg-info-subtle">
                                            <i class="ti ti-bike-off text-info"></i>
                                        </div>
                                    </div>
                                    <div class="progress mt-3" style="height: 6px">
                                        <div class="progress-bar bg-info" style="width: {{ availabilityPercentage }}%" role="progressbar"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Enhanced map and list view in tabs -->
                    <div class="row">
                        <div class="col-lg-8">
                            <div class="card border-0 shadow-sm mb-4">
                                <div class="card-header bg-transparent d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">
                                        <i class="ti ti-map-2 me-2"></i> Interactive Network Map
                                    </h5>
                                    <div class="map-controls">
                                        <div class="btn-group btn-group-sm" role="group">
                                            <button type="button" class="btn btn-outline-secondary" id="showAllStations">
                                                <i class="ti ti-map-pins"></i> All
                                            </button>
                                            <button type="button" class="btn btn-outline-success" id="showActiveStations">
                                                <i class="ti ti-circle-check"></i> Active
                                            </button>
                                            <button type="button" class="btn btn-outline-warning" id="showMaintenanceStations">
                                                <i class="ti ti-tools"></i> Maintenance
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body p-0">
                                    <div id="stationsMap" class="station-map"></div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-lg-4">
                            <div class="card border-0 shadow-sm mb-4">
                                <div class="card-header bg-transparent">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">
                                            <i class="ti ti-list-details me-2"></i> Station Status
                                        </h5>
                                        <div class="input-group input-group-sm" style="width: 140px;">
                                            <span class="input-group-text border-end-0 bg-transparent">
                                                <i class="ti ti-search text-muted"></i>
                                            </span>
                                            <input type="text" id="quickStationSearch" class="form-control border-start-0" placeholder="Find...">
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body p-0">
                                    <div class="station-quick-list">
                                        <ul class="list-group list-group-flush">
                                            {% for station in stations|sort((a, b) => a.name <=> b.name) %}
                                                <li class="list-group-item station-list-item p-3" data-station-id="{{ station.idStation }}">
                                                    <div class="d-flex justify-content-between align-items-start">
                                                        <div class="station-info">
                                                            <h6 class="mb-1 station-name">{{ station.name }}</h6>
                                                            <p class="mb-1 small text-muted station-address">
                                                                <i class="ti ti-map-pin me-1"></i>
                                                                {{ station.location ? station.location.address|slice(0, 40) ~ (station.location.address|length > 40 ? '...' : '') : 'No address set' }}
                                                            </p>
                                                            <div class="d-flex align-items-center mt-2">
                                                                <div class="me-3">
                                                                    <span class="badge bg-primary-subtle text-primary">
                                                                        <i class="ti ti-bike me-1"></i> {{ station.availableBikes }}/{{ station.totalDocks }}
                                                                    </span>
                                                                </div>
                                                                <div>
                                                                    <span class="status-indicator 
                                                                    {% if station.status.value == 'active' %}status-success{% 
                                                                    elseif station.status.value == 'maintenance' %}status-warning{% 
                                                                    else %}status-danger{% endif %}">
                                                                        {{ station.status.value|capitalize }}
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <button class="btn btn-sm btn-icon btn-outline-primary station-locate-btn" 
                                                                data-station-id="{{ station.idStation }}">
                                                            <i class="ti ti-crosshair"></i>
                                                        </button>
                                                    </div>
                                                </li>
                                            {% endfor %}
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Enhanced stations data table with actions -->
                    <div class="card border-0 shadow-sm">
                        <div class="card-header bg-transparent d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="ti ti-table me-2"></i> Stations Management
                            </h5>
                            <div class="actions">
                                <div class="input-group input-group-sm" style="width: 250px;">
                                    <span class="input-group-text border-end-0 bg-transparent">
                                        <i class="ti ti-search text-muted"></i>
                                    </span>
                                    <input type="text" id="stationSearch" class="form-control border-start-0" placeholder="Search stations...">
                                </div>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover table-striped align-middle mb-0">
                                    <thead class="bg-light">
                                        <tr>
                                            <th class="py-3">ID</th>
                                            <th class="py-3">Station Name</th>
                                            <th class="py-3">Location</th>
                                            <th class="py-3">Capacity</th>
                                            <th class="py-3">Status</th>
                                            <th class="py-3">Utilization</th>
                                            <th class="py-3">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {% for station in stations %}
                                        <tr class="station-row" data-station-id="{{ station.idStation }}">
                                            <td>
                                                <span class="fw-semibold text-primary">ST-{{ '%04d'|format(station.idStation) }}</span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="station-icon me-2 
                                                        {% if station.status.value == 'active' %}bg-success{% 
                                                        elseif station.status.value == 'maintenance' %}bg-warning{% 
                                                        else %}bg-secondary{% endif %}">
                                                        <i class="ti ti-map-pin"></i>
                                                    </div>
                                                    <div>
                                                        <span class="fw-medium d-block">{{ station.name }}</span>
                                                        <small class="text-muted">{{ station.availableBikes }} bikes available</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <span class="text-muted">{{ station.location ? station.location.address|slice(0, 30) ~ (station.location.address|length > 30 ? '...' : '') : 'No location set' }}</span>
                                                    {% if station.location %}
                                                    <button class="btn btn-sm btn-icon ms-2 view-on-map-btn" data-station-id="{{ station.idStation }}" title="View on map">
                                                        <i class="ti ti-map text-primary"></i>
                                                    </button>
                                                    {% endif %}
                                                </div>
                                            </td>
                                                                                        <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="ti ti-bike me-2 text-primary"></i> {{ station.totalDocks }}
                                                    {% if station.chargingDocks is defined %}
                                                    <span class="ms-2 text-muted small">
                                                        ({{ station.chargingDocks }} charging)
                                                    </span>
                                                    {% endif %}
                                                </div>
                                            </td>
                                            <td>
                                                <span class="station-status-badge 
                                                    {% if station.status.value == 'active' %}bg-success-subtle text-success{% 
                                                    elseif station.status.value == 'maintenance' %}bg-warning-subtle text-warning{% 
                                                    else %}bg-secondary-subtle text-secondary{% endif %}">
                                                    <i class="ti ti-{% if station.status.value == 'active' %}check-circle{% 
                                                        elseif station.status.value == 'maintenance' %}tools{% 
                                                        else %}circle-x{% endif %} me-1"></i>
                                                    {{ station.status.value|capitalize }}
                                                </span>
                                            </td>
                                            <td>
                                                {% set utilizationPercentage = (station.availableBikes / station.totalDocks * 100)|round %}
                                                <div class="d-flex align-items-center">
                                                    <div class="utilization-bar me-2">
                                                        <div class="progress" style="height: 8px; width: 100px;">
                                                            <div class="progress-bar 
                                                                {% if utilizationPercentage > 70 %}bg-success
                                                                {% elseif utilizationPercentage > 30 %}bg-info
                                                                {% else %}bg-danger{% endif %}" 
                                                                style="width: {{ utilizationPercentage }}%">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <span class="small">{{ utilizationPercentage }}%</span>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-icon btn-outline-secondary dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                                        <i class="ti ti-dots-vertical"></i>
                                                    </button>
                                                    <ul class="dropdown-menu dropdown-menu-end">
                                                        <li>
                                                            <a class="dropdown-item d-flex align-items-center" href="{{ path('admin_bicycle_station_detail', {'id': station.idStation}) }}">
                                                                <i class="ti ti-info-circle me-2"></i> View Details
                                                            </a>
                                                        </li>
                                                        <li>
    <a class="dropdown-item d-flex align-items-center station-edit-btn" href="#" data-station-id="{{ station.idStation }}">
        <i class="ti ti-edit me-2"></i> Edit Station
    </a>
</li>
                                                        <li>
                                                            <hr class="dropdown-divider">
                                                        </li>
                                                        <li>
                                                            <a class="dropdown-item d-flex align-items-center text-danger" href="#" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" data-station-id="{{ station.idStation }}">
                                                                <i class="ti ti-trash me-2"></i> Delete
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </td>
                                        </tr>
                                        {% endfor %}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete confirmation modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-4">
                    <i class="ti ti-alert-triangle text-warning" style="font-size: 3rem;"></i>
                    <h4 class="mt-3">Are you sure?</h4>
                    <p class="text-muted">Do you really want to delete this station? This process cannot be undone.</p>
                </div>
                <form id="deleteStationForm" method="post" action="">
                    <!-- CSRF token removed to disable CSRF protection -->
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Yes, Delete It</button>
            </div>
        </div>
    </div>
</div>
<!-- Station Form Modal -->
<div class="modal fade" id="stationFormModal" tabindex="-1" aria-labelledby="stationFormModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header bg-gradient-primary-to-secondary text-white">
        <h5 class="modal-title" id="stationFormModalLabel">
          <i class="ti ti-map-pin me-2"></i> Add New Station
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body p-0">
        <div class="container-fluid">
          <div class="row g-0">
            <!-- Left Column: Map & Location -->
            <div class="col-lg-7 p-4 border-end">
              <div class="mb-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                  <h6 class="fw-bold mb-0"><i class="ti ti-map-2 text-primary me-2"></i> Station Location</h6>
                  <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="showOtherStations" checked>
                    <label class="form-check-label small" for="showOtherStations">Show other stations</label>
                  </div>
                </div>
                
                <div class="input-group mb-3">
                  <input type="text" class="form-control" id="locationSearch" placeholder="Search for a location...">
                  <button class="btn btn-primary" type="button" id="searchLocationBtn">
                    <i class="ti ti-search"></i>
                  </button>
                </div>
                
                <div class="station-map-container rounded-3 overflow-hidden shadow-sm">
                  <div id="stationMap" style="height: 320px;"></div>
                  <div class="hover-indicator" id="mapHoverIndicator">
                    <i class="ti ti-map-pin me-2"></i>Click to place station
                  </div>
                </div>
                
                <div class="location-preview mt-3 p-3 rounded-3 bg-light shadow-sm">
                  <div class="d-flex align-items-center mb-2">
                    <div class="location-marker me-2">
                      <i class="ti ti-map-pin text-danger"></i>
                    </div>
                    <div class="flex-grow-1">
                      <p class="mb-0 fw-bold">Selected Location</p>
                      <p id="selectedAddress" class="text-muted mb-0 small">No location selected</p>
                    </div>
                  </div>
                  <div class="d-flex text-muted small">
                    <div class="me-3" id="selectedLatitude">
                      <strong>Lat:</strong> --
                    </div>
                    <div id="selectedLongitude">
                      <strong>Lng:</strong> --
                    </div>
                  </div>
                </div>
              </div>
              
              <!-- Hidden fields for location data -->
              <input type="hidden" id="station_latitude" name="station_latitude" value="">
              <input type="hidden" id="station_longitude" name="station_longitude" value="">
              <input type="hidden" id="station_address" name="station_address" value="">
              <input type="hidden" id="station_location_id" name="station_location_id" value="">
            </div>
            
            <!-- Right Column: Form Fields -->
            <div class="col-lg-5 p-4 bg-light">
              {{ form_start(stationForm, {
    'attr': {'novalidate': 'novalidate'},
    'action': path('admin_bicycle_station_new'), 
    'method': 'POST'
}) }}
                {{ form_errors(stationForm) }}
                
                <div class="form-floating mb-3">
                  {{ form_widget(stationForm.name, {
                    'attr': {
                      'class': 'form-control' ~ (stationForm.name.vars.valid ? '' : ' is-invalid'),
                      'placeholder': 'Station Name',
                      'id': 'station_name'
                    }
                  }) }}
                  {{ form_label(stationForm.name, 'Station Name', {'label_attr': {'for': 'station_name'}}) }}
                  {{ form_errors(stationForm.name, {'attr': {'class': 'invalid-feedback'}}) }}
                </div>
                
                <div class="row g-3 mb-3">
                  <div class="col-md-6">
                    <div class="form-floating">
                      {{ form_widget(stationForm.status, {
                        'attr': {
                          'class': 'form-select status-select' ~ (stationForm.status.vars.valid ? '' : ' is-invalid'),
                          'id': 'station_status'
                        }
                      }) }}
                      {{ form_label(stationForm.status, 'Status', {'label_attr': {'for': 'station_status'}}) }}
                      {{ form_errors(stationForm.status, {'attr': {'class': 'invalid-feedback'}}) }}
                      <div class="form-text small">Determines if the station appears in the app</div>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="form-floating">
                      {{ form_widget(stationForm.totalDocks, {
                        'attr': {
                          'class': 'form-control' ~ (stationForm.totalDocks.vars.valid ? '' : ' is-invalid'),
                          'placeholder': 'Total Docks',
                          'min': 1,
                          'id': 'station_totalDocks'
                        }
                      }) }}
                      {{ form_label(stationForm.totalDocks, 'Total Docks', {'label_attr': {'for': 'station_totalDocks'}}) }}
                      {{ form_errors(stationForm.totalDocks, {'attr': {'class': 'invalid-feedback'}}) }}
                      <div class="form-text small">Total docking spots available</div>
                    </div>
                  </div>
                </div>
                
                <div class="form-floating mb-4">
                  <input type="number" class="form-control" id="availableBikes" 
                         name="availableBikes" min="0" value="0" placeholder="Available Bikes">
                  <label for="availableBikes">Available Bikes</label>
                  <div class="form-text small">Number of bikes currently available</div>
                </div>
                
                {{ form_rest(stationForm) }}
              {{ form_end(stationForm, {'render_rest': false}) }}
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
          <i class="ti ti-x me-1"></i> Cancel
        </button>
        <button type="button" class="btn btn-primary" id="saveStationBtn">
          <i class="ti ti-device-floppy me-1"></i> Create Station
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Loading Overlay for the Modal -->
<div id="modalLoadingOverlay" class="modal-loading-overlay" style="display: none;">
  <div class="spinner-border text-primary" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
</div>
<div id="editModalLoadingOverlay" class="modal-loading-overlay" style="display: none;">
  <div class="spinner-border text-primary" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
</div>
{% endblock %}

{% block javascripts %}
<script src="{{ asset('js/back/bicycle/station-modal.js') }}?v={{ 'now'|date('YmdHi') }}"></script>
<script src="{{ asset('js/back/bicycle/station-edit-modal.js') }}?v={{ 'now'|date('YmdHi') }}"></script>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
<script>
// Station Map and Management JS
document.addEventListener('DOMContentLoaded', function() {
    // ======== Global variables ========
    let map;
    let markers = {};
    
    // ======== Initialize Map ========
    initializeStationMap();
    
    // ======== Set up event listeners ========
    setupFilterButtons();
    setupSearchFunctionality();
    setupStationInteractions();
    setupRefreshButton();
    setupDeleteConfirmation();
    
    // Setup popup edit buttons using the function from station-edit-modal.js
    if (typeof window.setupPopupEditButtons === 'function') {
        window.setupPopupEditButtons();
    } else {
        // Fallback: Add event listener directly if the function isn't available
        setupPopupEditButtonsDirectly();
    }
    
    // Fallback function for popup edit buttons
    function setupPopupEditButtonsDirectly() {
        document.addEventListener('click', function(e) {
            if (e.target && e.target.closest('.popup-edit-btn')) {
                e.preventDefault();
                const button = e.target.closest('.popup-edit-btn');
                const stationId = button.getAttribute('data-station-id');
                
                // Close the popup if map is available
                if (map) {
                    map.closePopup();
                }
                
                // Open the edit modal
                if (typeof window.initEditStationModal === 'function') {
                    window.initEditStationModal(stationId);
                } else {
                    console.error('Edit modal function not found. Make sure station-edit-modal.js is loaded properly.');
                    alert('Could not open edit modal. Please refresh the page and try again.');
                }
            }
        });
    }
    
    // ======== Map Initialization Function ========
    function initializeStationMap() {
        const mapElement = document.getElementById('stationsMap');
        if (!mapElement) return;
        
        // Create the map with enhanced configuration
        map = L.map('stationsMap', {
            zoomControl: false,
            attributionControl: false
        }).setView([36.8065, 10.1815], 13);
        
        // Add custom zoom control
        L.control.zoom({
            position: 'bottomright'
        }).addTo(map);
        
        // Add premium-looking tile layer
        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
            maxZoom: 19,
            subdomains: 'abcd'
        }).addTo(map);
        
        // Add stations to map
        const stations = getStationData();
        addStationsToMap(stations);
        
        // Fit map bounds to show all stations
        if (stations.length > 0) {
            const bounds = stations.map(station => [station.lat, station.lng]);
            map.fitBounds(bounds);
        }
        
        // Force map to render correctly after a short delay
        setTimeout(() => map.invalidateSize(), 200);
    }
    
    // ======== Get Station Data Function ========
    function getStationData() {
        return [
            {% for station in stations %}
                {% if station.location %}
                { 
                    id: {{ station.idStation }},
                    name: "{{ station.name|e('js') }}", 
                    lat: {{ station.location.latitude }}, 
                    lng: {{ station.location.longitude }},
                    status: "{{ station.status.value }}",
                    address: "{{ station.location.address|e('js')|raw }}",
                    totalDocks: {{ station.totalDocks }},
                    availableBikes: {{ station.availableBikes }}
                    {% if station.chargingDocks is defined %},chargingDocks: {{ station.chargingDocks }}{% endif %}
                }{% if not loop.last %},{% endif %}
                {% endif %}
            {% endfor %}
        ];
    }
    
    // ======== Add Stations to Map Function ========
    function addStationsToMap(stations) {
        stations.forEach(station => {
            // Create marker with custom icon
            const marker = L.marker([station.lat, station.lng], {
                title: station.name,
                icon: createStationIcon(station.status),
                riseOnHover: true
            }).addTo(map);
            
            // Store marker reference
            markers[station.id] = marker;
            
            // Create and bind popup
            const popupContent = createStationPopup(station);
            marker.bindPopup(popupContent, {
                className: 'station-popup',
                maxWidth: 300,
                minWidth: 280
            });
        });
    }
    
    // ======== Custom Icon Creator Function ========
    function createStationIcon(status) {
        const iconColor = status === 'active' ? '#66bb6a' : 
                         status === 'maintenance' ? '#ff9800' : '#9e9e9e';
        
        return L.divIcon({
            className: 'station-marker-icon',
            html: `<div style="background-color: ${iconColor}; width: 36px; height: 36px; border-radius: 50%; display: flex; align-items: center; justify-content: center; box-shadow: 0 2px 5px rgba(0,0,0,0.3); border: 2px solid white;">
                    <i class="ti ti-map-pin" style="color: white; font-size: 20px;"></i>
                  </div>`,
            iconSize: [36, 36],
            iconAnchor: [18, 36],
            popupAnchor: [0, -36]
        });
    }
    
    // ======== Popup Content Creator Function ========
    function createStationPopup(station) {
        return `
            <div class="station-info p-2">
                <h5 class="mb-2">${station.name}</h5>
                <p class="text-muted mb-2"><i class="ti ti-map-pin me-1"></i> ${station.address}</p>
                
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span class="badge ${station.status === 'active' ? 'bg-success' : 
                                    station.status === 'maintenance' ? 'bg-warning' : 'bg-secondary'}">
                        ${station.status.charAt(0).toUpperCase() + station.status.slice(1)}
                    </span>
                    <span class="text-muted small">ID: ST-${String(station.id).padStart(4, '0')}</span>
                </div>
                
                <div class="stats-grid mb-3">
                    <div class="stat-item">
                        <div class="stat-value">${station.availableBikes}</div>
                        <div class="stat-label">Available</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-value">${station.totalDocks}</div>
                        <div class="stat-label">Capacity</div>
                    </div>
                    ${station.chargingDocks !== undefined ? `
                    <div class="stat-item">
                        <div class="stat-value">${station.chargingDocks}</div>
                        <div class="stat-label">Charging</div>
                    </div>
                    ` : ''}
                </div>
                
                <div class="d-flex justify-content-between">
                    <a href="/admin/bicycle/station/${station.id}" class="btn btn-sm btn-primary">
                        <i class="ti ti-info-circle me-1"></i> Details
                    </a>
                    <button class="btn btn-sm btn-outline-secondary popup-edit-btn" data-station-id="${station.id}">
                        <i class="ti ti-edit me-1"></i> Edit
                    </button>
                </div>
            </div>
        `;
    }
    
    // ======== Setup Filter Buttons Function ========
    function setupFilterButtons() {
        const allButton = document.getElementById('showAllStations');
        const activeButton = document.getElementById('showActiveStations');
        const maintenanceButton = document.getElementById('showMaintenanceStations');
        
        if (!allButton || !activeButton || !maintenanceButton) return;
        
        // Show all stations
        allButton.addEventListener('click', function() {
            filterStations('all');
            setActiveFilterButton(this);
        });
        
        // Show only active stations
        activeButton.addEventListener('click', function() {
            filterStations('active');
            setActiveFilterButton(this);
        });
        
        // Show only maintenance stations
        maintenanceButton.addEventListener('click', function() {
            filterStations('maintenance');
            setActiveFilterButton(this);
        });
    }
    
    // ======== Filter Stations Function ========
    function filterStations(filter) {
        const stations = getStationData();
        let filteredStations = [];
        
        switch (filter) {
            case 'active':
                filteredStations = stations.filter(station => station.status === 'active');
                break;
            case 'maintenance':
                filteredStations = stations.filter(station => station.status === 'maintenance');
                break;
            default:
                filteredStations = stations;
        }
        
        // Show/hide markers based on filter
        stations.forEach(station => {
            if ((filter === 'all') || (station.status === filter)) {
                if (markers[station.id]) markers[station.id].addTo(map);
            } else {
                if (markers[station.id]) map.removeLayer(markers[station.id]);
            }
        });
        
        // Adjust map view
        if (filteredStations.length > 0) {
            const bounds = filteredStations.map(station => [station.lat, station.lng]);
            map.fitBounds(bounds);
        }
    }
    
    // ======== Set Active Filter Button Function ========
    function setActiveFilterButton(button) {
        document.querySelectorAll('.map-controls .btn').forEach(btn => {
            btn.classList.remove('active');
        });
        button.classList.add('active');
    }
    
    // ======== Setup Search Functionality Function ========
    function setupSearchFunctionality() {
        const stationSearch = document.getElementById('stationSearch');
        const quickStationSearch = document.getElementById('quickStationSearch');
        
        if (stationSearch) {
            stationSearch.addEventListener('input', function() {
                filterTableRows(this.value.toLowerCase());
            });
        }
        
        if (quickStationSearch) {
            quickStationSearch.addEventListener('input', function() {
                filterListItems(this.value.toLowerCase());
            });
        }
    }
    
    // ======== Filter Table Rows Function ========
    function filterTableRows(searchTerm) {
        document.querySelectorAll('.station-row').forEach(row => {
            const stationName = row.querySelector('.fw-medium').textContent.toLowerCase();
            const stationAddress = row.querySelector('.text-muted').textContent.toLowerCase();
            
            if (stationName.includes(searchTerm) || stationAddress.includes(searchTerm)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }
    
    // ======== Filter List Items Function ========
    function filterListItems(searchTerm) {
        document.querySelectorAll('.station-list-item').forEach(item => {
            const stationName = item.querySelector('.station-name').textContent.toLowerCase();
            const stationAddress = item.querySelector('.station-address').textContent.toLowerCase();
            
            if (stationName.includes(searchTerm) || stationAddress.includes(searchTerm)) {
                item.style.display = '';
            } else {
                item.style.display = 'none';
            }
        });
    }
    
    // ======== Setup Station Interactions Function ========
    function setupStationInteractions() {
        // Setup locate buttons
        document.querySelectorAll('.station-locate-btn').forEach(button => {
            button.addEventListener('click', function() {
                const stationId = parseInt(this.getAttribute('data-station-id'), 10);
                locateStation(stationId);
            });
        });
        
        // Setup view on map buttons
        document.querySelectorAll('.view-on-map-btn').forEach(button => {
            button.addEventListener('click', function() {
                const stationId = parseInt(this.getAttribute('data-station-id'), 10);
                locateStation(stationId, true);
            });
        });
        
        // Setup row highlighting
        document.querySelectorAll('.station-row').forEach(row => {
            const stationId = parseInt(row.getAttribute('data-station-id'), 10);
            
            row.addEventListener('mouseenter', function() {
                highlightMarker(stationId, true);
            });
            
            row.addEventListener('mouseleave', function() {
                highlightMarker(stationId, false);
            });
        });
    }
    
    // ======== Locate Station Function ========
    function locateStation(stationId, scrollToMap = false) {
        if (markers[stationId]) {
            map.setView(markers[stationId].getLatLng(), 16);
            markers[stationId].openPopup();
            
            // Scroll to map if requested
            if (scrollToMap) {
                document.getElementById('stationsMap').scrollIntoView({
                    behavior: 'smooth'
                });
            }
        }
    }
    
    // ======== Highlight Marker Function ========
    function highlightMarker(stationId, highlight) {
        if (markers[stationId] && markers[stationId].getElement()) {
            if (highlight) {
                markers[stationId].getElement().classList.add('highlight');
            } else {
                markers[stationId].getElement().classList.remove('highlight');
            }
        }
    }
    
    // ======== Setup Refresh Button Function ========
    function setupRefreshButton() {
        const refreshButton = document.getElementById('refreshStations');
        if (!refreshButton) return;
        
        refreshButton.addEventListener('click', function() {
            this.disabled = true;
            const icon = this.querySelector('i');
            icon.classList.add('fa-spin');
            
            // Reload page after a short delay
            setTimeout(() => {
                window.location.reload();
            }, 800);
        });
    }
    
    // ======== Setup Delete Confirmation Function ========
    function setupDeleteConfirmation() {
        const deleteModal = document.getElementById('confirmDeleteModal');
        if (!deleteModal) return;
        
        deleteModal.addEventListener('show.bs.modal', function(event) {
            const button = event.relatedTarget;
            const stationId = button.getAttribute('data-station-id');
            console.log("Deleting station ID:", stationId); // Debug output
            const confirmBtn = document.getElementById('confirmDeleteBtn');
            
            if (confirmBtn) {
                // Remove previous click event listeners
                const newConfirmBtn = confirmBtn.cloneNode(true);
                confirmBtn.parentNode.replaceChild(newConfirmBtn, confirmBtn);
                
                const form = document.getElementById('deleteStationForm');
                form.action = "/admin/bicycle/station/" + stationId + "/delete";
                
                newConfirmBtn.addEventListener('click', function() {
                    console.log("Submitting delete form for station ID:", stationId);
                    form.submit();
                });
            }
        });
    }
    
    // ======== Setup Popup Edit Buttons Function ========
    function setupPopupEditButtons() {
        // Global event listener for popup edit buttons
        document.addEventListener('click', function(e) {
            if (e.target && e.target.closest('.popup-edit-btn')) {
                e.preventDefault();
                const button = e.target.closest('.popup-edit-btn');
                const stationId = button.getAttribute('data-station-id');
                
                // Close the popup if map is available
                if (map) {
                    map.closePopup();
                }
                
                // Open the edit modal
                if (typeof window.initEditStationModal === 'function') {
                    window.initEditStationModal(stationId);
                } else {
                    console.error('Edit modal function not found');
                }
            }
        });
    }
});
</script>
{% endblock %}