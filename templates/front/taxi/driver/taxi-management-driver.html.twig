        {% extends 'front/base.html.twig' %}

        {% block stylesheets %}
            {{ parent() }}
            <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css">
            <style>
                .request-card {
                    border-radius: 10px;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                    margin-bottom: 1rem;
                }
                .map-container {
                    height: 400px;
                    border-radius: 10px;
                    margin-bottom: 1rem;
                }
                .status-badge {
                    font-size: 0.9rem;
                    padding: 0.3rem 0.6rem;
                }
                .active-rides {
                    background-color: #f8f9fa;
                    padding: 1rem;
                    border-radius: 10px;
                }
                .daily-goal-card {
                    border-radius: 15px;
                    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
                    margin-bottom: 2rem;
                }
                .goal-option {
                    cursor: pointer;
                    transition: transform 0.3s;
                }
                .goal-option:hover {
                    transform: scale(1.1);
                }
            </style>
        {% endblock %}

        {% block content %}
            <!-- Motivation and Daily Goal Section -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card text-center daily-goal-card">
                        <div class="card-body">
                            <h4 class="mb-4"><i class="fas fa-bullseye"></i> MARKI NAHREK!</h4>
                            <div class="d-flex justify-content-around mb-4">
                                {% for goal in [50, 100, 200] %}
                                    <div class="goal-option">
                                        <div class="rounded-circle bg-{{ loop.index == 1 ? 'primary' : (loop.index == 2 ? 'warning' : 'success') }} text-white d-flex align-items-center justify-content-center" style="width: 60px; height: 60px; font-size: 1.2rem;">
                                            <i class="fas fa-coins"></i> {{ goal }}
                                        </div>
                                    </div>
                                {% endfor %}
                            </div>
                            <div class="progress mb-3" style="height: 10px; border-radius: 5px;">
                                <div class="progress-bar bg-info" role="progressbar" style="width: 50%;" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <p><strong>Progress:</strong> 50 DT / 100 DT</p>
                            <button class="btn btn-primary">Update Goal</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card text-center">
                        <div class="card-body">
                            <h4 class="mb-3"><i class="fas fa-star"></i> Stay Motivated!</h4>
                            <p class="mb-4">"Success is the sum of small efforts, repeated day in and day out."</p>
                            <div class="d-flex justify-content-around">
                                <div>
                                    <h5><i class="fas fa-trophy text-warning"></i></h5>
                                    <p>Top Performer</p>
                                </div>
                                <div>
                                    <h5><i class="fas fa-road text-primary"></i></h5>
                                    <p>Distance Covered: <strong>120 km</strong></p>
                                </div>
                                <div>
                                    <h5><i class="fas fa-handshake text-success"></i></h5>
                                    <p>Happy Clients: <strong>45</strong></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Active Rides Section -->
            <div class="row">
                <div class="col-12 mb-4">
                    <div class="active-rides">
                        <h5><i class="fas fa-taxi"></i> Active Rides</h5>
                        <div class="d-flex flex-wrap justify-content-center">
                            {% for ride in activeRides %}
                                <div class="card request-card me-3 mb-3" style="width: 26rem; height: 32rem;">
                                    <div class="card-body p-4 d-flex flex-column justify-content-between">
                                        <div>
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="card-title mb-3">Ride</h6>
                                                <span class="badge bg-success status-badge">{{ ride.status }}</span>
                                            </div>
                                            <p class="mb-3"><i class="fas fa-user"></i> {{ ride.userName }}</p>
                                            <p class="mb-3"><i class="fas fa-map-marker-alt text-danger"></i> {{ ride.pickupLocation }}</p>
                                            <p class="mb-3"><i class="fas fa-map-marker-alt text-success"></i> {{ ride.dropoffLocation }}</p>
                                            <p class="mb-3"><i class="fas fa-route"></i> {{ ride.distance }} km</p>
                                            <p class="mb-3"><i class="fas fa-clock"></i> {{ ride.duration }} min</p>
                                            <p class="mb-3"><i class="fas fa-dollar-sign"></i> {{ ride.price }} DT</p>
                                        </div>
                                        <div class="d-flex justify-content-start mt-4">
                                            <button class="btn btn-sm btn-danger me-2 delete-ride-btn" data-ride-id="{{ ride.id }}">Delete</button>
                                            <button class="btn btn-sm btn-warning update-duration-btn" data-ride-id="{{ ride.id }}">Update Duration</button>
                                        </div>
                                    </div>
                                </div>
                            {% else %}
                                <p>No active rides at the moment.</p>
                            {% endfor %}
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <script>
                                            document.addEventListener('DOMContentLoaded', function () {
                                                const updateDurationButtons = document.querySelectorAll('.update-duration-btn');
                                                const setDurationModal = new bootstrap.Modal(document.getElementById('setDurationModal'));
                                                const modalRequestIdInput = document.getElementById('modalRequestId');
                                                const rideDurationInput = document.getElementById('rideDuration');
                                                const submitDurationButton = document.getElementById('submitDuration');

                                                updateDurationButtons.forEach(button => {
                                                    button.addEventListener('click', function () {
                                                        const rideId = this.getAttribute('data-ride-id');
                                                        modalRequestIdInput.value = rideId;
                                                        setDurationModal.show();
                                                    });
                                                });

                                                submitDurationButton.addEventListener('click', function () {
                                                    const rideId = modalRequestIdInput.value;
                                                    const rideDuration = rideDurationInput.value;

                                                    if (!rideDuration || rideDuration <= 0 || rideDuration > 90) {
                                                        return;
                                                    }

                                                    fetch(`/driver/update-ride-duration/${rideId}`, {
                                                        method: 'POST',
                                                        headers: {
                                                            'Content-Type': 'application/json',
                                                            'X-Requested-With': 'XMLHttpRequest',
                                                            'X-CSRF-Token': '{{ csrf_token('update_ride_duration') }}'
                                                        },
                                                        body: JSON.stringify({ rideId: rideId, duration: rideDuration })
                                                    })
                                                    .then(response => {
                                                        if (response.ok) {
                                                            return response.json();
                                                        } else {
                                                            throw new Error('Failed to update ride duration');
                                                        }
                                                    })
                                                    .then(data => {
                                                        location.reload();
                                                    })
                                                    .catch(error => {
                                                        console.error('Error:', error);
                                                    });

                                                    setDurationModal.hide();
                                                });
                                            });
                                        </script>
                                        <script>
                                            document.querySelectorAll('.delete-ride-btn').forEach(button => {
                                                button.addEventListener('click', function() {
                                                const rideId = this.getAttribute('data-ride-id');
                                                if (confirm('Are you sure you want to delete this ride?')) {
                                                    fetch(`/driver/ride/delete/${rideId}`, {
                                                        method: 'DELETE',
                                                        headers: {
                                                            'X-CSRF-Token': '{{ csrf_token('delete_ride') }}'
                                                        }
                                                    })
                                                    .then(response => {
                                                        if (response.ok) {
                                                            alert('Ride deleted successfully!');
                                                            location.reload();
                                                        } else {
                                                            alert('Failed to delete the ride.');
                                                        }
                                                    });
                                                }
                                            });
                                        });
                                    </script>
                                </div>
                            </div>        <!-- Available Requests Section -->
                <div class="col-md-12 text-center">
                    <h5><i class="fas fa-clipboard-list text-black"></i> Available Requests</h5>
                    <div class="d-flex flex-wrap justify-content-center">
                        {% for request in availableRequests %}
                            <div class="card request-card me-3 mb-3" style="width: 20rem; height: 24rem;">
                                <div class="card-body p-3 d-flex flex-column justify-content-between">
                                    <div>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h6 class="card-title mb-2">Request {{ request.userName }}</h6>
                                            <span class="badge bg-warning status-badge">{{ request.status }}</span>
                                        </div>
                                        <p class="mb-2"><i class="fas fa-map-marker-alt text-danger"></i> From: {{ request.pickupLocation }}</p>
                                        <p class="mb-2"><i class="fas fa-map-marker-alt text-success"></i> To: {{ request.dropoffLocation }}</p>
                                    </div>
                                    <div class="d-flex justify-content-center mt-3">
                                        <button class="btn btn-sm btn-success accept-request-btn" style="background-color: lightgreen; border-color: lightgreen;" data-request-id="{{ request.id }}">Accept</button>
                                    </div>
                                </div>
                            </div>
                        {% else %}
                            <p>No available requests at the moment.</p>
                        {% endfor %}
                    </div>
                </div>        </div>        <div class="d-flex justify-content-center">
                    <div id="map" class="map-container" style="width: 80%; height: 300px;"></div>
                </div>        <div class="modal fade" id="setDurationModal" tabindex="-1" aria-labelledby="setDurationModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="setDurationModalLabel">Set Ride Duration</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="setDurationForm">
                                <div class="mb-3">
                                    <label for="rideDuration" class="form-label">Duration (in minutes, must be between 1 and 90)</label>        <input type="number" class="form-control" id="rideDuration" name="rideDuration" min="1" required>
                                </div>
                                <input type="hidden" id="modalRequestId" name="requestId">
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" id="submitDuration">Submit</button>
                        </div>
                    </div>
                </div>
            </div>
        {% endblock %}

        {% block javascripts %}
            {{ parent() }}
            <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script>
                // Initialize map
                const map = L.map('map').setView([36.8065, 10.1815], 12);
                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

                document.addEventListener('DOMContentLoaded', function () {
                    const acceptButtons = document.querySelectorAll('.accept-request-btn');
                    const setDurationModal = new bootstrap.Modal(document.getElementById('setDurationModal'));
                    const modalRequestIdInput = document.getElementById('modalRequestId');
                    const rideDurationInput = document.getElementById('rideDuration');
                    const submitDurationButton = document.getElementById('submitDuration');

                    acceptButtons.forEach(button => {
                        button.addEventListener('click', function () {
                            const requestId = this.getAttribute('data-request-id');
                            modalRequestIdInput.value = requestId;
                            setDurationModal.show();
                        });
                    });

                    submitDurationButton.addEventListener('click', function () {
                        const requestId = modalRequestIdInput.value;
                        const rideDuration = rideDurationInput.value;

                        if (!rideDuration) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Empty Duration',
                                text: 'Please enter a duration.',
                            });
                            return;
                        }

                        if (rideDuration <= 0 || rideDuration > 90) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Invalid Duration',
                                text: 'Please enter a duration between 1 and 90 minutes.',
                            });
                            return;
                        }

                        fetch(`/driver/accept-request/${requestId}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest',
                                'X-CSRF-Token': '{{ csrf_token('accept_request') }}'
                            },
                            body: JSON.stringify({ requestId: requestId, duration: rideDuration })
                        })
                        .then(response => response.json())
                        .then(data => {
                            location.reload();
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });

                        setDurationModal.hide();
                    });

                    // SweetAlert for delete confirmation
                    document.querySelectorAll('.delete-ride-btn').forEach(button => {
                        button.addEventListener('click', function () {
                            const rideId = this.getAttribute('data-ride-id');
                            Swal.fire({
                                title: 'Are you sure?',
                                text: "You won't be able to revert this!",
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, delete it!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    fetch(`/driver/ride/delete/${rideId}`, {
                                        method: 'DELETE',
                                        headers: {
                                            'X-CSRF-Token': '{{ csrf_token('delete_ride') }}'
                                        }
                                    })
                                    .then(response => {
                                        if (response.ok) {
                                            Swal.fire(
                                                'Deleted!',
                                                'The ride has been deleted.',
                                                'success'
                                            ).then(() => location.reload());
                                        } else {
                                            Swal.fire(
                                                'Error!',
                                                'Failed to delete the ride.',
                                                'error'
                                            );
                                        }
                                    });
                                }
                            });
                        });
                    });
                });
            </script>        <style>        
.modal-backdrop {
  opacity: 0.3 !important;
}


.modal-backdrop {
  background-color: transparent  !important; 
}
        </style>
        {% endblock %}

   
   