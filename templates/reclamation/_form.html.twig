{{ form_start(form) }}
    {{ form_row(form.title) }}
    
    <div class="content-field-container mb-4">
        {{ form_label(form.content) }}
        <div class="d-flex align-items-center mb-2">
            <button type="button" id="generateFeedbackBtn" class="btn btn-success btn-sm" style="margin-bottom: 10px; display: flex; align-items: center; gap: 5px;">
                <i class="fas fa-magic"></i> Get AI Suggestions
            </button>
            <div class="spinner-border text-success ml-2 d-none" id="feedbackSpinner" role="status" style="margin-left: 10px; width: 1rem; height: 1rem;">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        {{ form_widget(form.content) }}
        {{ form_help(form.content) }}
        {{ form_errors(form.content) }}
    </div>
    
    <button class="btn btn-primary">{{ button_label|default('Save') }}</button>
{{ form_end(form) }}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const titleInput = document.querySelector('[name="{{ form.title.vars.full_name }}"]');
        const contentTextarea = document.querySelector('[name="{{ form.content.vars.full_name }}"]');
        const generateBtn = document.getElementById('generateFeedbackBtn');
        const spinner = document.getElementById('feedbackSpinner');
        
        // Track if the textarea is already filled with content
        let hasUserContent = false;
        contentTextarea.addEventListener('input', function() {
            hasUserContent = contentTextarea.value.trim().length > 0;
        });
        
        generateBtn.addEventListener('click', function() {
            // Confirm before overwriting existing content
            if (hasUserContent) {
                if (!confirm('This will replace your existing feedback text. Continue?')) {
                    return;
                }
            }
            
            // Get the title value for better suggestions
            const title = titleInput.value;
            
            // Show loading spinner
            spinner.classList.remove('d-none');
            generateBtn.disabled = true;
            
            // Send request to generate feedback
            fetch('/feedback/generate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    title: title
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.suggestion) {
                    contentTextarea.value = data.suggestion;
                    // Trigger input event to update character counter if present
                    contentTextarea.dispatchEvent(new Event('input'));
                    hasUserContent = true;
                } else if (data.error) {
                    alert('Error: ' + data.error);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Failed to generate feedback. Please try again.');
            })
            .finally(() => {
                // Hide loading spinner
                spinner.classList.add('d-none');
                generateBtn.disabled = false;
            });
        });
        
        // Character counter for content textarea
        const maxLength = contentTextarea.getAttribute('data-max-length');
        const charCounter = document.querySelector('.char-counter');
        
        if (charCounter && maxLength) {
            function updateCharCount() {
                const currentLength = contentTextarea.value.length;
                charCounter.textContent = `${currentLength}/${maxLength} characters`;
                
                if (currentLength > maxLength * 0.9) {
                    charCounter.classList.add('text-danger');
                } else {
                    charCounter.classList.remove('text-danger');
                }
            }
            
            contentTextarea.addEventListener('input', updateCharCount);
            updateCharCount(); // Initialize count
        }
    });
</script>
