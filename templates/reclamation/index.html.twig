{% extends 'back-office/base.html.twig' %}

{% block content %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reclamation index</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --accent-color: #e74c3c;
            --light-color: #ecf0f1;
            --dark-color: #2c3e50;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: var(--dark-color);
        }
        
        .header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 0 0 10px 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        
        .table-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            padding: 2rem;
            margin-bottom: 2rem;
        }
        
        .table thead {
            background-color: var(--primary-color);
            color: white;
        }
        
        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        .status-badge {
            padding: 0.35rem 0.65rem;
            border-radius: 50px;
            font-size: 0.75rem;
            font-weight: 600;
            cursor: pointer;
        }
        
        .status-true {
            background-color: #d4edda;
            color: #155724;
        }
        
        .status-false {
            background-color: #f8d7da;
            color: #721c24;
        }
        
        .btn-action {
            border-radius: 50px;
            padding: 0.35rem 0.75rem;
            font-size: 0.85rem;
            margin-right: 0.5rem;
        }
        
        .no-records {
            text-align: center;
            padding: 2rem;
            color: #6c757d;
        }
        
        .actions-column {
            min-width: 150px;
        }
        
        .filter-container {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        
        .filter-active {
            background-color: var(--primary-color) !important;
            color: white !important;
        }
        
        @media (max-width: 768px) {
            .table-responsive {
                overflow-x: auto;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
        }
    </style>
</head>
<body>
    {% block body %}
    <div class="container">
        <div class="filter-container">
            <div class="row">
                <div class="col-md-6">
                    <div class="input-group mb-3">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" id="searchInput" class="form-control" placeholder="Rechercher par titre ou utilisateur...">
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="d-flex flex-wrap gap-2">
                        <button class="btn btn-outline-secondary filter-btn" data-filter="all">
                            <i class="fas fa-list me-1"></i> Toutes
                        </button>
                        <button class="btn btn-outline-secondary filter-btn" data-filter="true">
                            <i class="fas fa-check-circle me-1"></i> Traitées
                        </button>
                        <button class="btn btn-outline-secondary filter-btn" data-filter="false">
                            <i class="fas fa-clock me-1"></i> Non traitées
                        </button>
                        <a href="{{ path('app_reclamation_export_pdf') }}" class="btn btn-danger">
                            <i class="fas fa-file-pdf me-1"></i> Exporter en PDF
                        </a>
                        <div class="dropdown">
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item sort-option" href="#" data-sort="date-desc">Date (récent)</a></li>
                                <li><a class="dropdown-item sort-option" href="#" data-sort="date-asc">Date (ancien)</a></li>
                                <li><a class="dropdown-item sort-option" href="#" data-sort="title-asc">Titre (A-Z)</a></li>
                                <li><a class="dropdown-item sort-option" href="#" data-sort="title-desc">Titre (Z-A)</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="table-container">
            <!-- This div will be replaced via AJAX -->
            <div id="reclamation-content">
                {% include 'reclamation/reclamation_list_content.html.twig' with {'reclamations': reclamations} %}
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Setup AJAX pagination
            setupAjaxPagination();
            
            // Filtrage par statut
            const filterButtons = document.querySelectorAll('.filter-btn');
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const filterValue = this.getAttribute('data-filter');
                    
                    // Mettre à jour l'état actif des boutons
                    filterButtons.forEach(btn => btn.classList.remove('filter-active'));
                    this.classList.add('filter-active');
                    
                    // Filtrer les lignes
                    const rows = document.querySelectorAll('#reclamationsTable tbody tr');
                    rows.forEach(row => {
                        if (filterValue === 'all') {
                            row.style.display = '';
                        } else {
                            const rowStatus = row.getAttribute('data-status');
                            if (rowStatus === filterValue) {
                                row.style.display = '';
                            } else {
                                row.style.display = 'none';
                            }
                        }
                    });
                });
            });
            
            // Recherche
            const searchInput = document.getElementById('searchInput');
            searchInput.addEventListener('keyup', function() {
                const searchTerm = this.value.toLowerCase();
                const rows = document.querySelectorAll('#reclamationsTable tbody tr');
                
                rows.forEach(row => {
                    const title = row.getAttribute('data-title');
                    const user = row.getAttribute('data-user');
                    
                    if (title.includes(searchTerm) || user.includes(searchTerm)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
            
            // Tri
            const sortOptions = document.querySelectorAll('.sort-option');
            sortOptions.forEach(option => {
                option.addEventListener('click', function(e) {
                    e.preventDefault();
                    const sortValue = this.getAttribute('data-sort');
                    sortReclamations(sortValue);
                });
            });
        });
        
        // Function to setup AJAX pagination event listeners
        function setupAjaxPagination() {
            // Clear any existing event listeners first to prevent duplicates
            document.querySelectorAll('.ajax-pagination-link').forEach(link => {
                link.removeEventListener('click', handlePaginationClick);
                link.addEventListener('click', handlePaginationClick);
            });
        }
        
        // Separate handler function for pagination clicks
        function handlePaginationClick(e) {
            e.preventDefault();
            const url = this.getAttribute('href');
            loadReclamationsViaAjax(url);
        }
        
        // Function to load reclamations via AJAX
        function loadReclamationsViaAjax(url) {
            // Show loading indicator
            const contentDiv = document.getElementById('reclamation-content');
            contentDiv.innerHTML = '<div class="text-center p-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>';
            
            // Make AJAX request
            fetch(url, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.text())
            .then(html => {
                // Update content
                contentDiv.innerHTML = html;
                
                // Re-initialize pagination event listeners
                setupAjaxPagination();
            })
            .catch(error => {
                console.error('Error loading reclamations:', error);
                contentDiv.innerHTML = '<div class="alert alert-danger">Une erreur est survenue lors du chargement des données.</div>';
            });
        }
        
        function filterByStatus(status) {
            const filterButtons = document.querySelectorAll('.filter-btn');
            filterButtons.forEach(btn => {
                btn.classList.remove('filter-active');
                if (btn.getAttribute('data-filter') === status.toString()) {
                    btn.classList.add('filter-active');
                }
            });
            
            const rows = document.querySelectorAll('#reclamationsTable tbody tr');
            rows.forEach(row => {
                const rowStatus = row.getAttribute('data-status');
                if (rowStatus === status.toString()) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }
        
        function sortReclamations(sortType) {
            const rows = Array.from(document.querySelectorAll('#reclamationsTable tbody tr'));
            const tbody = document.querySelector('#reclamationsTable tbody');
            
            rows.sort((a, b) => {
                switch(sortType) {
                    case 'date-desc':
                        return new Date(b.getAttribute('data-date')) - new Date(a.getAttribute('data-date'));
                    case 'date-asc':
                        return new Date(a.getAttribute('data-date')) - new Date(b.getAttribute('data-date'));
                    case 'title-asc':
                        return a.getAttribute('data-title').localeCompare(b.getAttribute('data-title'));
                    case 'title-desc':
                        return b.getAttribute('data-title').localeCompare(a.getAttribute('data-title'));
                    default:
                        return 0;
                }
            });
            
            // Vider et réinsérer les lignes triées
            tbody.innerHTML = '';
            rows.forEach(row => tbody.appendChild(row));
        }
    </script>
    {% endblock %}
</body>
</html>
{% endblock %}

{% block title %}Gestion des réclamations{% endblock %}