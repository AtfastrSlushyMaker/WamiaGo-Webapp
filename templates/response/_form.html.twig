{{ form_start(form, {'attr': {'class': 'needs-validation'}}) }}
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">Response Information</h5>
        </div>
        <div class="card-body">
            {% if form_errors(form) %}
                <div class="alert alert-danger">
                    {{ form_errors(form) }}
                </div>
            {% endif %}

            <div class="mb-3">
                {{ form_label(form.reclamation) }}
                {{ form_widget(form.reclamation) }}
                <div class="invalid-feedback">
                    {{ form_errors(form.reclamation) }}
                </div>
                <small class="form-text text-muted">{{ form_help(form.reclamation) }}</small>
            </div>

            <div class="mb-3">
                {{ form_label(form.content) }}
                {{ form_widget(form.content) }}
                <div class="form-text">
                    <span id="charCount">0</span>/1000 characters
                </div>
                <div class="invalid-feedback">
                    {{ form_errors(form.content) }}
                </div>
                <small class="form-text text-muted">{{ form_help(form.content) }}</small>
            </div>

            <div class="mb-3">
                {{ form_label(form.date) }}
                {{ form_widget(form.date) }}
                <div class="invalid-feedback">
                    {{ form_errors(form.date) }}
                </div>
                <small class="form-text text-muted">{{ form_help(form.date) }}</small>
            </div>

            <div class="d-grid gap-2">
                {{ form_widget(form.submit, {'attr': {'class': 'btn btn-primary'}}) }}
            </div>
        </div>
    </div>
{{ form_end(form) }}

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Character counting for textarea
        const contentTextarea = document.querySelector('textarea[name="{{ form.content.vars.full_name }}"]');
        const charCount = document.getElementById('charCount');
        
        if (contentTextarea && charCount) {
            // Initial count
            charCount.textContent = contentTextarea.value.length;
            
            contentTextarea.addEventListener('input', function() {
                const count = this.value.length;
                charCount.textContent = count;
                
                // Character limit visualization
                if (count > 900) {
                    charCount.classList.add('text-danger');
                } else {
                    charCount.classList.remove('text-danger');
                }
                
                // Validation feedback
                if (count < 10) {
                    this.classList.add('is-invalid');
                    this.setCustomValidity('Response content must be at least 10 characters');
                } else if (count > 1000) {
                    this.value = this.value.substring(0, 1000);
                    charCount.textContent = 1000;
                    this.classList.add('is-invalid');
                    this.setCustomValidity('Response content cannot exceed 1000 characters');
                } else {
                    this.classList.remove('is-invalid');
                    this.setCustomValidity('');
                }
            });
        }
        
        // Form validation on submit
        const form = document.querySelector('form.needs-validation');
        
        if (form) {
            form.addEventListener('submit', function(event) {
                // Reset validity
                form.querySelectorAll('.form-control, .form-select').forEach(el => {
                    el.classList.remove('is-invalid');
                });
                
                let isValid = true;
                
                // Validate content field
                if (contentTextarea && (contentTextarea.value.trim().length < 10 || contentTextarea.value.length > 1000)) {
                    contentTextarea.classList.add('is-invalid');
                    isValid = false;
                }
                
                // Validate reclamation selection
                const reclamationSelect = document.querySelector('select[name="{{ form.reclamation.vars.full_name }}"]');
                if (reclamationSelect && !reclamationSelect.value) {
                    reclamationSelect.classList.add('is-invalid');
                    isValid = false;
                }
                
                // Validate date field
                const dateField = document.querySelector('input[name="{{ form.date.vars.full_name }}"]');
                if (dateField && !dateField.value) {
                    dateField.classList.add('is-invalid');
                    isValid = false;
                }
                
                if (!isValid) {
                    event.preventDefault();
                    event.stopPropagation();
                }
            });
        }
    });
</script>
